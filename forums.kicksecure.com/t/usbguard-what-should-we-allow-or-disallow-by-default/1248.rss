<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>USBGuard - what should we allow or disallow by default?</title>
    <link>https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248</link>
    <description>Kicksecure 18 is intended to ship USBGuard by default, with a configuration that should block likely-malicious, unknown, and unusual devices. The hope is that it won’t block so much as to significantly increase the difficulty of using Kicksecure, while also making it more difficult to use devices such as the Hak5 rubber ducky or O.MG plug (popular keystroke injection devices).

Our current USBGuard configuration is visible at https://github.com/Kicksecure/security-misc/blob/master/etc/usbguard/rules.d/30_security-misc.conf. The original intent was to allow everything connected at boot, and then disallow everything other than mass storage devices, keyboards, and mice, while also not allowing keyboards or mice to be combined with other interfaces, and not allowing additional keyboards and mice to be attached if one is already present. However, as pointed out by Marek (the lead Qubes OS developer), this is going to cause *tons* of legitimate devices to be blocked: https://github.com/Kicksecure/security-misc/commit/cba16879eff9d3d998c127e41c38d2067cdf04cc#r164474977

We have a pretty classic security vs. usability tradeoff here. We don&#39;t want to block so much that users disable USBGuard because they can&#39;t live with it, but we also don&#39;t want to allow so much that malicious devices work in common configurations. It&#39;s already risky enough allowing keyboards and mice to be attached after bootup, since if the only keyboard and mouse present on bootup is non-USB (as is the case with most laptops if you don&#39;t plug additional devices into them), keystroke injection devices that present themselves as only a keyboard will be able to attack the system and succeed. But blocking *everything* other than keyboards, mice, and storage devices may be overkill also.

Does anyone have input on what should be blocked or not blocked by default? Some USB devices to think about here are:

* Webcams
  * On its own, a webcam probably can&#39;t cause too much trouble... the worst it could do is video the user on the user&#39;s own machine, it would probably be much more useful for an attacker to record the user with an *attacker-controlled* machine, which of course USBGuard can&#39;t do anything about.
* Microphones
  * Similar situation as webcams.
* Headsets/speakers/miscellaneous other USB audio devices
  * Similar situation as webcams.
* Printers
  * Could introduce attack surface that we don&#39;t want, see https://www.evilsocket.net/2024/09/26/Attacking-UNIX-systems-via-CUPS-Part-I/
* MIDI interfaces
  * Probably pretty rare, no idea what the risks are of allowing these to be used by default, would probably block them just in case.
* Touchscreens
  * Input device, similar to a mouse, might even be handled already by allowing mice in the system. Dangers are similar or identical to allowing mice.
* Android devices
  * Uses or at least used to use Media Transfer Protocol. Unsure what the risks are here.
* USB Ethernet
  * Oftentimes uses RNDIS, which the Linux kernel maintainer Greg Kroah-Hartman has tried to get disabled in Linux at least *three times* due to supposedly unfixable security issues. (https://www.phoronix.com/news/Linux-Disabling-RNDIS-Drivers, https://www.phoronix.com/news/Linux-Disable-RNDIS-Drivers, https://www.phoronix.com/news/Linux-RNDIS-Removal-EOY2024) I would consider this very high-risk and would NOT enable it.
* Bluetooth dongles
  * Could be used to attach arbitrary devices to systems remotely, but this would require some user interaction. Unsure what the implications of a malicious Bluetooth dongle would be. Internal Bluetooth cards actually use the USB bus, but they&#39;ll be present on boot and thus allowed, if everything works as expected.
* 2FA keys
  * I believe these present themselves as a human interface device, not sure how safe or unsafe this is or if it&#39;s feasible to allow it by default.
* Anything else we should consider allowing or not allowing by default?</description>
    
    <lastBuildDate>Tue, 26 Aug 2025 03:25:13 +0000</lastBuildDate>
    <category>Development</category>
    <atom:link href="https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>USBGuard - what should we allow or disallow by default?</title>
        <dc:creator><![CDATA[NTH9R6]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="arraybolt3" data-post="7" data-topic="1248">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://forums.kicksecure.com/user_avatar/forums.kicksecure.com/arraybolt3/48/88_2.png" class="avatar"> arraybolt3:</div>
<blockquote>
<p>RNDIS aside, one could argue that if a device presented itself as something normal <em>and</em> a USB Ethernet device, that could be used to mount an attack against running services on the system. Assuming Kicksecure has no open ports by default (I wouldn’t expect it to, but haven’t actually checked), this probably isn’t much of a concern, but if someone’s running something like CUPS on their machine, LAN access to the machine could be enough to take it over completely</p>
</blockquote>
</aside>
<p>Couldn’t you just harden CUPS to disable remote printing and turn off printer sharing among other hardening or you talking the CUPS service in general?</p>
          <p><a href="https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248/11">Read full topic</a></p>
        ]]></description>
        <link>https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248/11</link>
        <pubDate>Tue, 26 Aug 2025 03:25:13 +0000</pubDate>
        <guid isPermaLink="false">forums.kicksecure.com-post-1248-11</guid>
        <source url="https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248.rss">USBGuard - what should we allow or disallow by default?</source>
      </item>
      <item>
        <title>USBGuard - what should we allow or disallow by default?</title>
        <dc:creator><![CDATA[NTH9R6]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="arraybolt3" data-post="7" data-topic="1248">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://forums.kicksecure.com/user_avatar/forums.kicksecure.com/arraybolt3/48/88_2.png" class="avatar"> arraybolt3:</div>
<blockquote>
<p>There are other USB Ethernet protocols besides RNDIS, I don’t have as much of a problem with the protocols there</p>
</blockquote>
</aside>
<p>Ok, so I wanted to chime in on this discussion. I saw this and it made me do some digging into this.<br>
Is this correct for the classifications?</p>
<blockquote>
<p><a href="https://www.usb.org/defined-class-codes#anchor_BaseClassEFh" class="inline-onebox" rel="noopener nofollow ugc">Defined Class Codes | USB-IF</a></p>
</blockquote>
<pre><code class="lang-auto">    USB‑IF class  0xEF (Miscellaneous)
    Subclass    0x04 (RNDIS)
    Protocol    0x01 (RNDIS‑over‑Ethernet)
</code></pre>
<p>If so is this format correct and would it only block RNDIS based devices such as Ethernet USB adapters?</p>
<pre><code class="lang-auto"># Block any USB device that advertises the RNDIS Ethernet interface
reject with-interface-type 0xef:04:01
</code></pre>
<p>Or would you need a wildcard if the device has its interface not as interface <span class="hashtag-raw">#0</span> or presents the class/subclass further down the descriptor?<br>
<code>reject interface all-of { 0xef 0x04 0x01 }</code></p>
<p><strong>How common is RNDIS for USB‑Ethernet adapters?</strong></p>
<p>Wikipedia states RNDIS is “a Microsoft proprietary protocol used mostly on top of USB”. What I also read is that inexpensive adapters sold for Windows PCs expose the RNDIS class because Windows already includes a built‑in RNDIS driver, making the device “plug and play”.</p>
<p>Well does that mean that adapters aimed at cross‑platform use (Linux/macOS, embedded boards, Android) often implement CDC‑ECM or vendor‑specific classes instead of RNDIS?<br>
Is it safe to say that the standard is CDC‑ECM in most Ethernet USB adapters rather then RDNIS?</p>
<blockquote>
<p><a href="https://old.reddit.com/r/embedded/comments/aeqxbl/which_usbethernet_standard_should_i_implement/edrrd03/" rel="noopener nofollow ugc">https://old.reddit.com/r/embedded/comments/aeqxbl/which_usbethernet_standard_should_i_implement/edrrd03/</a></p>
</blockquote>
<p>However I also read this though from 2023 so I dont know?</p>
<blockquote>
<p><a href="https://jordemort.dev/blog/why-android-cant-use-cdc-ethernet/" class="inline-onebox" rel="noopener nofollow ugc">Why Android can't use CDC Ethernet</a></p>
</blockquote>
<p>You would need see what the standard that is found commonly on the market? My guess is in cheap Chinese brands or adapters use RDNIS?</p>
          <p><a href="https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248/10">Read full topic</a></p>
        ]]></description>
        <link>https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248/10</link>
        <pubDate>Tue, 26 Aug 2025 03:23:23 +0000</pubDate>
        <guid isPermaLink="false">forums.kicksecure.com-post-1248-10</guid>
        <source url="https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248.rss">USBGuard - what should we allow or disallow by default?</source>
      </item>
      <item>
        <title>USBGuard - what should we allow or disallow by default?</title>
        <dc:creator><![CDATA[arraybolt3]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="nurmagoz" data-post="3" data-topic="1248">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://forums.kicksecure.com/letter_avatar_proxy/v4/letter/n/8e7dd6/48.png" class="avatar"> nurmagoz:</div>
<blockquote>
<p>USB to VGA?</p>
</blockquote>
</aside>
<p>This requires third-party kernel drivers (DisplayLink), so it would be a pain to get this sort of thing to work anyway. I don’t see a problem with leaving this disabled by default.</p>
<aside class="quote no-group" data-username="nurmagoz" data-post="3" data-topic="1248">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://forums.kicksecure.com/letter_avatar_proxy/v4/letter/n/8e7dd6/48.png" class="avatar"> nurmagoz:</div>
<blockquote>
<p>USB joysticks?</p>
</blockquote>
</aside>
<p>Agreed, leave disabled by default.</p>
<aside class="quote no-group" data-username="nurmagoz" data-post="3" data-topic="1248">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://forums.kicksecure.com/letter_avatar_proxy/v4/letter/n/8e7dd6/48.png" class="avatar"> nurmagoz:</div>
<blockquote>
<p>Consider to allow only 3 and above USB version?</p>
</blockquote>
</aside>
<p>Not sure if this even can be done with USBGuard, but it’s an interesting question to think about. USB 2, as I understand it, simulcasts data packets to <em>all</em> USB 2 ports on the system, then expects devices to ignore packets that aren’t addressed to them. This allows passively stealing data from the system by logging packets that weren’t addressed to the logging device. USB 3 only sends data to the individual devices it is intended for, thus this potentially reduces risk a bit. But at the same time, <em>lots</em> of devices are USB 2 only (I don’t think I’ve seen a USB 3 keyboard in my life), so this would probably break way too much. If we were to offer it, it should be something that is opt-in, not opt-out, in my opinion.</p>
          <p><a href="https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248/9">Read full topic</a></p>
        ]]></description>
        <link>https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248/9</link>
        <pubDate>Tue, 26 Aug 2025 02:18:51 +0000</pubDate>
        <guid isPermaLink="false">forums.kicksecure.com-post-1248-9</guid>
        <source url="https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248.rss">USBGuard - what should we allow or disallow by default?</source>
      </item>
      <item>
        <title>USBGuard - what should we allow or disallow by default?</title>
        <dc:creator><![CDATA[arraybolt3]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="MetalMoxie" data-post="6" data-topic="1248" data-full="true">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://forums.kicksecure.com/letter_avatar_proxy/v4/letter/m/51bf81/48.png" class="avatar"> MetalMoxie:</div>
<blockquote>
<p>Allow us to chose just like with the web browsers.</p>
</blockquote>
</aside>
<p>Agreed. If users can’t choose what to use or not use on their own systems, something is badly wrong. We’re discussing what to allow or disallow <em>by default</em>, the user will have free reign to override the defaults however they want.</p>
          <p><a href="https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248/8">Read full topic</a></p>
        ]]></description>
        <link>https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248/8</link>
        <pubDate>Tue, 26 Aug 2025 02:02:07 +0000</pubDate>
        <guid isPermaLink="false">forums.kicksecure.com-post-1248-8</guid>
        <source url="https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248.rss">USBGuard - what should we allow or disallow by default?</source>
      </item>
      <item>
        <title>USBGuard - what should we allow or disallow by default?</title>
        <dc:creator><![CDATA[arraybolt3]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="desi_fubu" data-post="5" data-topic="1248">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://forums.kicksecure.com/letter_avatar_proxy/v4/letter/d/da6949/48.png" class="avatar"> desi_fubu:</div>
<blockquote>
<p><a href="https://thehackernews.com/2025/08/linux-based-lenovo-webcams-flaw-can-be.html" rel="noopener nofollow ugc">https://thehackernews.com/2025/08/linux-based-lenovo-webcams-flaw-can-be.html</a></p>
</blockquote>
</aside>
<p>I’m not really concerned about this because:</p>
<ul>
<li>You have to compromise the system to overwrite the camera’s firmware and turn it malicious. By the time you’ve compromised the system enough to do that, it’s already “game over”.</li>
<li>The camera has to present itself as a keyboard device in order to attack the system. If the camera is plugged into the system after boot, USBGuard will see one of two things, depending on how the camera presents itself:
<ul>
<li>Either, it will see a camera and a keyboard together, and will thus reject the camera because it combines a human interface device with some other device.</li>
<li>Or, it will see just a keyboard, in which case if the user has any other USB keyboard already attached, it will reject the keyboard. (If the user doesn’t have a USB keyboard already attached, then it’s “game over”, but if the camera is <em>only</em> presenting itself as a keyboard and not as a camera, it would be able to evade even the current highly strict settings.</li>
</ul>
</li>
<li>If the camera is already plugged into the system at bootup, then it’s “game over”, but again, that would be the case even with the current highly strict settings, and if an attacker is able to compromise a system enough to flash a camera with non-standard firmware, they can probably also control USBGuard and allow the camera to be used so it can be attacked.
<ul>
<li>A counter-argument to this is that USBGuard makes an attacker have to take one more step to attack the camera (maybe - does this exploit work even if the system doesn’t the camera? It probably doesn’t…), and that one more step may be enough to thwart an attacker that doesn’t know they need to take that step.</li>
</ul>
</li>
</ul>
<aside class="quote no-group" data-username="desi_fubu" data-post="5" data-topic="1248">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://forums.kicksecure.com/letter_avatar_proxy/v4/letter/d/da6949/48.png" class="avatar"> desi_fubu:</div>
<blockquote>
<p>Same as webcams they can be used to record passwords and text via acoustic keyboard eavesdropping with tools like <a href="https://github.com/ggerganov/kbd-audio" rel="noopener nofollow ugc">Keytap2</a>. The best thing if someone was concerned would be to unplug these ribbon cables from their computer or de-solder them if its a newer (landfill device) where everything is soldered in.</p>
</blockquote>
</aside>
<p>I’m not sure how I see how this applies to the threat model USBGuard is intended to help with - Keytap-style attacks require either compromising the user’s computer (in which case, why bother with Keytap, just install a keylogger and be done), or requires the attacker to be able to place their own microphone physically close to the victim (in which case the victim’s computer isn’t the one the microphone is plugged into).</p>
<aside class="quote no-group" data-username="desi_fubu" data-post="5" data-topic="1248">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://forums.kicksecure.com/letter_avatar_proxy/v4/letter/d/da6949/48.png" class="avatar"> desi_fubu:</div>
<blockquote>
<p>Arduinos can indeed be used as MIDI interfaces and are used in hacking peripheral devices</p>
</blockquote>
</aside>
<p>I don’t really understand how that would work but it sounds neat, maybe you can share a link?</p>
<aside class="quote no-group" data-username="desi_fubu" data-post="5" data-topic="1248">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://forums.kicksecure.com/letter_avatar_proxy/v4/letter/d/da6949/48.png" class="avatar"> desi_fubu:</div>
<blockquote>
<p>No brainer here Bluetooth is unsafe</p>
</blockquote>
</aside>
<p>I don’t think it’s quite that cut-and-dried, but I agree in general that individual Bluetooth devices can have questionable security (as is true with wireless devices in general sadly) and I would not rely on them in a high-risk situation. That being said, I personally use a Bluetooth mouse and keyboard with my workstation, but I also don’t have a threat model that includes nearby skilled attackers with radio equipment.</p>
<aside class="quote no-group" data-username="desi_fubu" data-post="5" data-topic="1248">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://forums.kicksecure.com/letter_avatar_proxy/v4/letter/d/da6949/48.png" class="avatar"> desi_fubu:</div>
<blockquote>
<p>I don’t get it considering there’s good amount of people that use them to get around Intel ME. Many people including myself would remove the WiFi card and us an external Ethernet USB Adapter as a mitigation technique.</p>
</blockquote>
</aside>
<p>I’m not referencing the idea of USB Ethernet <em>in general</em> when calling it very high-risk, though I do consider it a risk as I’ll explain in a bit. The main problem with USB Ethernet is the implementation - RNDIS (which is used for most Android USB tethering sadly) reportedly has serious protocol-level vulnerabilities, so bad that the kernel maintainer who is arguably second-in-command to Linux Torvalds has tried to remove support for the protocol from Linux entirely, three times. He hasn’t shared <em>what</em> the vulnerabilities are yet, but I think he probably knows what he’s talking about and wouldn’t try to do this if the protocol wasn’t legitimately unsafe. There are other USB Ethernet protocols besides RNDIS, I don’t have as much of a problem with the protocols there.</p>
<p>RNDIS aside, one could argue that if a device presented itself as something normal <em>and</em> a USB Ethernet device, that could be used to mount an attack against running services on the system. Assuming Kicksecure has no open ports by default (I wouldn’t expect it to, but haven’t actually checked), this probably isn’t much of a concern, but if someone’s running something like CUPS on their machine, LAN access to the machine could be enough to take it over completely, if one security researcher is to be believed. See the link about CUPS vulnerabilities in the original post. A device could present itself as USB Ethernet to gain LAN access to the machine, assuming the machine automatically connected to the “network” presented by the device (I believe NetworkManager does this by default).</p>
<p>I do not deny the very good usability benefits of USB Ethernet, but I think in general it presents a significant attack vector from the standpoint of USB devices mounting attacks against a system. I’d prefer if we documented how users can manually allow USB Ethernet, instead of allowing it in general.</p>
<p>This brings up a potential hardening idea I’ll save for another post, it might be possible to mitigate this risk such that we can allow USB Ethernet by default. (Edit: I filed the post, for those who are interested: <a href="https://forums.kicksecure.com/t/networkmanager-disable-automatic-connection-to-wired-networks/1260" class="inline-onebox">NetworkManager: Disable automatic connection to wired networks?</a></p>
<aside class="quote no-group" data-username="desi_fubu" data-post="5" data-topic="1248">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://forums.kicksecure.com/letter_avatar_proxy/v4/letter/d/da6949/48.png" class="avatar"> desi_fubu:</div>
<blockquote>
<p>Malicious USB ethernet devices exist but the general rule of thumb in this manner is don’t buy online and only buy locally from a trusted vendor (brand). Supply chain attack is a real threat but atleast is wouldn’t be targeted to you specifically unlike buying online.</p>
</blockquote>
</aside>
<p>Keep in mind that one threat vector we have to be ready for is a device that looks like one thing to the user but presents itself as something else to the computer. For instance, a malicious pair of USB headphones may present itself to the computer as a USB Ethernet device as well as a USB audio device. Sometimes the malicious device will be one an attacker walks by and plugs in, so the user’s choice of what to buy may not protect them, and the user’s understanding of what they’re plugging into their system may be wrong.</p>
          <p><a href="https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248/7">Read full topic</a></p>
        ]]></description>
        <link>https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248/7</link>
        <pubDate>Tue, 26 Aug 2025 02:00:15 +0000</pubDate>
        <guid isPermaLink="false">forums.kicksecure.com-post-1248-7</guid>
        <source url="https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248.rss">USBGuard - what should we allow or disallow by default?</source>
      </item>
      <item>
        <title>USBGuard - what should we allow or disallow by default?</title>
        <dc:creator><![CDATA[MetalMoxie]]></dc:creator>
        <description><![CDATA[
            <p>Allow us to chose just like with the web browsers.</p>
          <p><a href="https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248/6">Read full topic</a></p>
        ]]></description>
        <link>https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248/6</link>
        <pubDate>Mon, 25 Aug 2025 21:38:40 +0000</pubDate>
        <guid isPermaLink="false">forums.kicksecure.com-post-1248-6</guid>
        <source url="https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248.rss">USBGuard - what should we allow or disallow by default?</source>
      </item>
      <item>
        <title>USBGuard - what should we allow or disallow by default?</title>
        <dc:creator><![CDATA[desi_fubu]]></dc:creator>
        <description><![CDATA[
            <p>should be blocked or not blocked by default?</p>
<blockquote>
<p>Webcams</p>
</blockquote>
<p><a href="https://thehackernews.com/2025/08/linux-based-lenovo-webcams-flaw-can-be.html" class="onebox" target="_blank" rel="noopener nofollow ugc">https://thehackernews.com/2025/08/linux-based-lenovo-webcams-flaw-can-be.html</a></p>
<blockquote>
<p>Microphones</p>
</blockquote>
<p>Same as webcams they can be used to record passwords and text via acoustic keyboard eavesdropping with tools like <a href="https://github.com/ggerganov/kbd-audio" rel="noopener nofollow ugc">Keytap2</a>. The best thing if someone was concerned would be to unplug these ribbon cables from their computer or de-solder them if its a newer (landfill device) where everything is soldered in.</p>
<blockquote>
<p>MIDI interfaces</p>
</blockquote>
<p>Arduinos can indeed be used as MIDI interfaces and are used in hacking peripheral devices</p>
<blockquote>
<p>Bluetooth dongles</p>
</blockquote>
<p>No brainer here Bluetooth is unsafe</p>
<hr>
<p>Thing I’m conflicted on here.</p>
<blockquote>
<p>USB Ethernet</p>
</blockquote>
<aside class="quote no-group" data-username="arraybolt3" data-post="1" data-topic="1248">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://forums.kicksecure.com/user_avatar/forums.kicksecure.com/arraybolt3/48/88_2.png" class="avatar"> arraybolt3:</div>
<blockquote>
<p>I would consider this very high-risk and would NOT enable it.</p>
</blockquote>
</aside>
<p>I don’t get it considering there’s good amount of people that use them to get around Intel ME. Many people including myself would remove the WiFi card and us an external Ethernet USB Adapter as a mitigation technique.</p>
<blockquote>
<blockquote>
<p>Machines whose AMT version is 6.x (Q57/Q67/C206 chipsets, 2010-2011 (early 2012) Core i3/i5/i7) have ME that can talk only through the NIC that is soldered to the board, no external NIC will ever be visible to the ME.</p>
</blockquote>
</blockquote>
<p>It’s even debatable if it can communicate on newer device through an adapter in my opinion.</p>
<p>Not to mention people that only want wired many newer (landfill devices) computers require you to buy an USB adapter since they don’t seem to have them on boards anymore (laptops).</p>
<p>On the other hand external peripheral devices are generally no allowed by organizations and corporate companies due to attack vector with the exceptions of mouse and keyboard. Malicious USB ethernet devices exist but the general rule of thumb in this manner is don’t buy online and only buy locally from a trusted vendor (brand). Supply chain attack is a real threat but atleast is wouldn’t be targeted to you specifically unlike buying online.</p>
          <p><a href="https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248/5">Read full topic</a></p>
        ]]></description>
        <link>https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248/5</link>
        <pubDate>Mon, 25 Aug 2025 21:17:14 +0000</pubDate>
        <guid isPermaLink="false">forums.kicksecure.com-post-1248-5</guid>
        <source url="https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248.rss">USBGuard - what should we allow or disallow by default?</source>
      </item>
      <item>
        <title>USBGuard - what should we allow or disallow by default?</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>related:</p>
<aside class="onebox discoursetopic" data-onebox-src="https://forums.whonix.org/t/usbguard-on-kicksecure-to-prevent-hardware-keyloggers-badusb/11988">
  <header class="source">
      <img src="https://forums.whonix.org/uploads/default/optimized/2X/3/37fe81e592143b0c01c9656c44069b4bfdd3990e_2_32x32.ico" class="site-icon" alt="" width="32" height="32">

      <a href="https://forums.whonix.org/t/usbguard-on-kicksecure-to-prevent-hardware-keyloggers-badusb/11988" target="_blank" rel="noopener" title="05:04PM - 22 July 2021">Whonix Forum – 22 Jul 21</a>
  </header>

  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:690/255;"><img src="https://forums.whonix.org/uploads/default/original/2X/5/5ac973ff4302e69269667e09e67d850c0b628c7a.jpeg" class="thumbnail" width="690" height="255"></div>

<div class="title-wrapper">
  <h3><a href="https://forums.whonix.org/t/usbguard-on-kicksecure-to-prevent-hardware-keyloggers-badusb/11988" target="_blank" rel="noopener">USBGuard on Kicksecure to prevent hardware keyloggers/BadUSB</a></h3>
  <div class="topic-category">
      <span class="badge-wrapper bullet">
        <span class="badge-category-bg" style="background-color: #25AAE2;"></span>
        <span class="badge-category clear-badge">
          <span class="category-name">Development</span>
        </span>
      </span>
  </div>
</div>

  <p>“The USBGuard software framework helps to protect your computer against rogue USB devices (a.k.a. [BadUSB]) by implementing basic whitelisting and blacklisting capabilities based on device attributes.”  From their Github.  Maybe could help someone...</p>


  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

<aside class="onebox githubissue" data-onebox-src="https://github.com/QubesOS/qubes-issues/issues/10174">
  <header class="source">

      <a href="https://github.com/QubesOS/qubes-issues/issues/10174" target="_blank" rel="noopener">github.com/QubesOS/qubes-issues</a>
  </header>

  <article class="onebox-body">
    <div class="github-row">
  <div class="github-icon-container" title="Issue" data-github-private-repo="false">
	  <svg width="60" height="60" class="github-icon" viewBox="0 0 14 16" aria-hidden="true"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg>
  </div>

  <div class="github-info-container">
    <h4>
      <a href="https://github.com/QubesOS/qubes-issues/issues/10174" target="_blank" rel="noopener">Consider the impact of USBGuard in sys-usb</a>
    </h4>

    <div class="github-info">
      <div class="date">
        opened <span class="discourse-local-date" data-format="ll" data-date="2025-08-22" data-time="18:22:07" data-timezone="UTC">06:22PM - 22 Aug 25 UTC</span>
      </div>

        <div class="date">
          closed <span class="discourse-local-date" data-format="ll" data-date="2025-08-23" data-time="00:42:19" data-timezone="UTC">12:42AM - 23 Aug 25 UTC</span>
        </div>

      <div class="user">
        <a href="https://github.com/ArrayBolt3" target="_blank" rel="noopener">
          <img alt="" src="https://avatars.githubusercontent.com/u/104878738?v=4" class="onebox-avatar-inline" width="20" height="20">
          ArrayBolt3
        </a>
      </div>
    </div>

    <div class="labels">
        <span style="display:inline-block;margin-top:2px;background-color: #B8B8B8;padding: 2px;border-radius: 4px;color: #fff;margin-left: 3px;">
          R: not applicable
        </span>
        <span style="display:inline-block;margin-top:2px;background-color: #B8B8B8;padding: 2px;border-radius: 4px;color: #fff;margin-left: 3px;">
          P: default
        </span>
    </div>
  </div>
</div>

  <div class="github-row">
    <p class="github-body-container">[How to file a helpful issue](https://www.qubes-os.org/doc/issue-tracking/)

I a<span class="show-more-container"><a href="" rel="noopener" class="show-more">…</a></span><span class="excerpt hidden">pologize in advance if this isn't really the right spot for this, I couldn't find a "development" category on the forums so this is the closest I could figure out.

### The problem you're addressing (if any)

In Kicksecure 18 and higher, we're going to be shipping USBGuard, enabled by default, with a configuration that allows all devices that are present in the system on bootup, and blocks all non-whitelisted devices that are plugged in after bootup. By default, the whitelist in Kicksecure will allow USB mass storage devices, and will allow a single mouse and keyboard at a time (additional keyboards are rejected). All other devices are rejected, including devices that combine a USB mass storage interface with anything else, and devices that combine a keyboard or mouse interface with anything (except for "unified" keyboard/mouse devices like are common with some wireless receivers). The goal is to allow a limited subset of common USB devices to work out of the box, while also thwarting devices like the USB "rubber ducky".

This feature set makes good sense for Kicksecure on the desktop, but we're unsure if it makes sense in Qubes OS, if a user chooses to use Kicksecure on sys-usb. On the one hand, USBGuard in sys-usb could substantially increase the security of users who have to pass through USB keyboards and mice to dom0 (only one keyboard and mouse would be allowed, a keystroke injection device would be rejected so long as it was not present when sys-usb booted and a legitimate USB keyboard was already plugged in). On the other hand, USBGuard could frustrate users who need to work with things such as USB headsets, webcams, touchscreens, and other "advanced" devices. In theory a user could reboot sys-usb to get these devices to work (assuming our configuration actually does trust everything present on bootup), but maybe that's too much hassle?

The USBGuard configuration we intend to ship in Kicksecure 18 can be seen [here](https://github.com/Kicksecure/security-misc/blob/master/etc/usbguard/rules.d/30_security-misc.conf).

### The solution you'd like

Determine if USBGuard in a Kicksecure-based sys-usb makes sense, and if any configuration changes are needed in the event it is useful in Qubes OS.

### The value to a user and who that user might be

If we choose to leave it enabled, users will be able to pass through input devices to dom0 with less risk of malicious devices being able to take over the system.

If we choose to disable it, users won't end up facing new issues with USB device passthrough.

### Completion criteria checklist

(This section is for developer use only. Please do not modify it.)</span></p>
  </div>

  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

<aside class="onebox githubissue" data-onebox-src="https://github.com/QubesOS/qubes-issues/issues/8820">
  <header class="source">

      <a href="https://github.com/QubesOS/qubes-issues/issues/8820" target="_blank" rel="noopener">github.com/QubesOS/qubes-issues</a>
  </header>

  <article class="onebox-body">
    <div class="github-row">
  <div class="github-icon-container" title="Issue" data-github-private-repo="false">
	  <svg width="60" height="60" class="github-icon" viewBox="0 0 14 16" aria-hidden="true"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg>
  </div>

  <div class="github-info-container">
    <h4>
      <a href="https://github.com/QubesOS/qubes-issues/issues/8820" target="_blank" rel="noopener">Hardened option for single USB keyboard</a>
    </h4>

    <div class="github-info">
      <div class="date">
        opened <span class="discourse-local-date" data-format="ll" data-date="2024-01-02" data-time="12:29:26" data-timezone="UTC">12:29PM - 02 Jan 24 UTC</span>
      </div>


      <div class="user">
        <a href="https://github.com/emanruse" target="_blank" rel="noopener">
          <img alt="" src="https://avatars.githubusercontent.com/u/40140013?v=4" class="onebox-avatar-inline" width="20" height="20">
          emanruse
        </a>
      </div>
    </div>

    <div class="labels">
        <span style="display:inline-block;margin-top:2px;background-color: #B8B8B8;padding: 2px;border-radius: 4px;color: #fff;margin-left: 3px;">
          P: default
        </span>
        <span style="display:inline-block;margin-top:2px;background-color: #B8B8B8;padding: 2px;border-radius: 4px;color: #fff;margin-left: 3px;">
          C: input proxy
        </span>
    </div>
  </div>
</div>

  <div class="github-row">
    <p class="github-body-container">### The problem you're addressing (if any)

Currently, on systems which can us<span class="show-more-container"><a href="" rel="noopener" class="show-more">…</a></span><span class="excerpt hidden">e only USB keyboards, it seems possible to have unrestricted number of such USB keyboards that are automatically allowed to connect to dom0 due to `/etc/qubes-rpc/policy/qubes.InputKeyboard` permissive policy. This makes it possible a malicious USB device (e.g. a USB memory stick) to represent itself as a keyboard, do its mischief, then switch back to being a non-keyboard.

Using usbguard inside sys-usb to allow only specific predefined keyboards is a possibility, however it might result in a situation when the user gets locked out of the system. Example: The user has only one physical keyboard and whitelists it in usbguard rules. If the keyboard hardware stops functioning (e.g. the keyboard is physically damaged), the user will be compelled to replace it with another. However, since the new keyboard will not be whitelisted, the user won't be able to access the system through it, regardless of the fact that it is a good (non-malicious) device.


### The solution you'd like

Provide an option (perhaps even enforced by default) which allows the user to restrict the number of possible USB keyboards on the system to 1 (one) at a time.


### The value to a user, and who that user might be

The proposed solution would make it impossible for a malicious device to act as described, as a second keyboard will be denied. The only way to use another USB keyboard would be to physically disconnect the first one, then connect another. That must also be documented properly.

#### Possible caveat

**I don't know if that is possible** (there are [some](https://forums.tomshardware.com/threads/every-usb-port-will-randomly-disconnect-for-a-few-seconds-on-new-pc.3793952/) [reports](https://superuser.com/questions/1450976/external-usb-hard-drive-momentarily-disconnects-when-additional-external-hard-dr)), but just for extra consideration:

If for some reason (e.g. a driver bug, power related issues or other) the malicious USB device is able to cause the original keyboard to (appear to) disconnect or simply "sneak in" while the original good keyboard is actually disconnected, the proposed solution will not work *per se* - the malicious device may still connect as a keyboard and accomplish the described attack, and during that period the actual keyboard will be blocked. To prevent such possibility, additional possible measures to the solution might be:

- Enable any newly connected USB keyboard **only after reboot**

In this way, even if a temporary disconnect happens, no other device would be able to take over a running the system, because to accomplish an attack the malicious device would have to cause a reboot of dom0 through sys-usb, which seems impossible in Qubes OS (at least not without a serious security bug).

- UI for easy whitelisting of newly connected keyboards (using usbguard rules in sys-usb)

Without other input device (e.g. at least a mouse able to click and confirm the newly connected keyboards), a possibility for user input might be the power button of the system. A service like `acpid` may be used to monitor for events. Example usage:

A new keyboard is connected. The UI dialog shows up and asks for confirmation. The user is required to press the power button of the system to activate the new keyboard, after which it gets whitelisted in `/etc/usbguard/rules`. The `acpid` service may probably run in a separate VM (sys-acpi), thus making it impossible for a malicious device to attack both sys-usb and sys-acpi. Having sys-acpi may even provide extra security, e.g. the number of presses within a period of time might be configurable, e.g. "must press 3 times within 10 seconds", and may serve as a "password" for allowing new USB devices.

**Additional notes**:

As by default passwordless root is enabled in VMs, whitelisting devices in sys-usb itself may turn out vulnerable. I don't know what inter-VM communication mechanism for this may be suitable but it seems better to isolate the "credentials" of devices - have another VM store and verify if a device is whitelisted, then report the result back to sys-usb.</span></p>
  </div>

  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

          <p><a href="https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248/4">Read full topic</a></p>
        ]]></description>
        <link>https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248/4</link>
        <pubDate>Mon, 25 Aug 2025 15:18:12 +0000</pubDate>
        <guid isPermaLink="false">forums.kicksecure.com-post-1248-4</guid>
        <source url="https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248.rss">USBGuard - what should we allow or disallow by default?</source>
      </item>
      <item>
        <title>USBGuard - what should we allow or disallow by default?</title>
        <dc:creator><![CDATA[nurmagoz]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="arraybolt3" data-post="1" data-topic="1248">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://forums.kicksecure.com/user_avatar/forums.kicksecure.com/arraybolt3/48/88_2.png" class="avatar"> arraybolt3:</div>
<blockquote>
<p>We don’t want to block so much that users disable USBGuard because they can’t live with it, but we also don’t want to allow so much that malicious devices work in common configurations.</p>
</blockquote>
</aside>
<p>If it were me, I wouldn’t have given this a second thought. If security requires disabling so much, then it is what it is.</p>
<aside class="quote no-group" data-username="arraybolt3" data-post="1" data-topic="1248">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://forums.kicksecure.com/user_avatar/forums.kicksecure.com/arraybolt3/48/88_2.png" class="avatar"> arraybolt3:</div>
<blockquote>
<p>2FA keys</p>
</blockquote>
</aside>
<p>Good to have.</p>
<aside class="quote no-group" data-username="arraybolt3" data-post="1" data-topic="1248">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://forums.kicksecure.com/user_avatar/forums.kicksecure.com/arraybolt3/48/88_2.png" class="avatar"> arraybolt3:</div>
<blockquote>
<p>Anything else we should consider allowing or not allowing by default?</p>
</blockquote>
</aside>
<p>Old bs stuff e.g:</p>
<ul>
<li>USB to VGA?</li>
<li>USB joysticks?</li>
<li>Consider to allow only 3 and above USB version?</li>
</ul>
          <p><a href="https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248/3">Read full topic</a></p>
        ]]></description>
        <link>https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248/3</link>
        <pubDate>Mon, 25 Aug 2025 08:09:43 +0000</pubDate>
        <guid isPermaLink="false">forums.kicksecure.com-post-1248-3</guid>
        <source url="https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248.rss">USBGuard - what should we allow or disallow by default?</source>
      </item>
      <item>
        <title>USBGuard - what should we allow or disallow by default?</title>
        <dc:creator><![CDATA[arraybolt3]]></dc:creator>
        <description><![CDATA[
            <aside class="onebox allowlistedgeneric" data-onebox-src="https://www.mail-archive.com/qubes-devel@googlegroups.com/msg05626.html">
  <header class="source">
      <img src="https://www.mail-archive.com/favicon.ico" class="site-icon" alt="" width="16" height="16">

      <a href="https://www.mail-archive.com/qubes-devel@googlegroups.com/msg05626.html" target="_blank" rel="noopener nofollow ugc">mail-archive.com</a>
  </header>

  <article class="onebox-body">
    

<h3><a href="https://www.mail-archive.com/qubes-devel@googlegroups.com/msg05626.html" target="_blank" rel="noopener nofollow ugc">[qubes-devel] USBGuard in Kicksecure-based sys-usb?</a></h3>



  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

          <p><a href="https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248/2">Read full topic</a></p>
        ]]></description>
        <link>https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248/2</link>
        <pubDate>Sun, 24 Aug 2025 02:44:07 +0000</pubDate>
        <guid isPermaLink="false">forums.kicksecure.com-post-1248-2</guid>
        <source url="https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248.rss">USBGuard - what should we allow or disallow by default?</source>
      </item>
      <item>
        <title>USBGuard - what should we allow or disallow by default?</title>
        <dc:creator><![CDATA[arraybolt3]]></dc:creator>
        <description><![CDATA[
            <p>Kicksecure 18 is intended to ship USBGuard by default, with a configuration that should block likely-malicious, unknown, and unusual devices. The hope is that it won’t block so much as to significantly increase the difficulty of using Kicksecure, while also making it more difficult to use devices such as the Hak5 rubber ducky or O.MG plug (popular keystroke injection devices).</p>
<p>Our current USBGuard configuration is visible at <a href="https://github.com/Kicksecure/security-misc/blob/master/etc/usbguard/rules.d/30_security-misc.conf" class="inline-onebox" rel="noopener nofollow ugc">security-misc/etc/usbguard/rules.d/30_security-misc.conf at master · Kicksecure/security-misc · GitHub</a>. The original intent was to allow everything connected at boot, and then disallow everything other than mass storage devices, keyboards, and mice, while also not allowing keyboards or mice to be combined with other interfaces, and not allowing additional keyboards and mice to be attached if one is already present. However, as pointed out by Marek (the lead Qubes OS developer), this is going to cause <em>tons</em> of legitimate devices to be blocked: <a href="https://github.com/Kicksecure/security-misc/commit/cba16879eff9d3d998c127e41c38d2067cdf04cc#r164474977" class="inline-onebox" rel="noopener nofollow ugc">Polish USBGuard configuration · Kicksecure/security-misc@cba1687 · GitHub</a></p>
<p>We have a pretty classic security vs. usability tradeoff here. We don’t want to block so much that users disable USBGuard because they can’t live with it, but we also don’t want to allow so much that malicious devices work in common configurations. It’s already risky enough allowing keyboards and mice to be attached after bootup, since if the only keyboard and mouse present on bootup is non-USB (as is the case with most laptops if you don’t plug additional devices into them), keystroke injection devices that present themselves as only a keyboard will be able to attack the system and succeed. But blocking <em>everything</em> other than keyboards, mice, and storage devices may be overkill also.</p>
<p>Does anyone have input on what should be blocked or not blocked by default? Some USB devices to think about here are:</p>
<ul>
<li>Webcams
<ul>
<li>On its own, a webcam probably can’t cause too much trouble… the worst it could do is video the user on the user’s own machine, it would probably be much more useful for an attacker to record the user with an <em>attacker-controlled</em> machine, which of course USBGuard can’t do anything about.</li>
</ul>
</li>
<li>Microphones
<ul>
<li>Similar situation as webcams.</li>
</ul>
</li>
<li>Headsets/speakers/miscellaneous other USB audio devices
<ul>
<li>Similar situation as webcams.</li>
</ul>
</li>
<li>Printers
<ul>
<li>Could introduce attack surface that we don’t want, see <a href="https://www.evilsocket.net/2024/09/26/Attacking-UNIX-systems-via-CUPS-Part-I/" class="inline-onebox" rel="noopener nofollow ugc">Attacking UNIX Systems via CUPS, Part I</a></li>
</ul>
</li>
<li>MIDI interfaces
<ul>
<li>Probably pretty rare, no idea what the risks are of allowing these to be used by default, would probably block them just in case.</li>
</ul>
</li>
<li>Touchscreens
<ul>
<li>Input device, similar to a mouse, might even be handled already by allowing mice in the system. Dangers are similar or identical to allowing mice.</li>
</ul>
</li>
<li>Android devices
<ul>
<li>Uses or at least used to use Media Transfer Protocol. Unsure what the risks are here.</li>
</ul>
</li>
<li>USB Ethernet
<ul>
<li>Oftentimes uses RNDIS, which the Linux kernel maintainer Greg Kroah-Hartman has tried to get disabled in Linux at least <em>three times</em> due to supposedly unfixable security issues. (<a href="https://www.phoronix.com/news/Linux-Disabling-RNDIS-Drivers" rel="noopener nofollow ugc">https://www.phoronix.com/news/Linux-Disabling-RNDIS-Drivers</a>, <a href="https://www.phoronix.com/news/Linux-Disable-RNDIS-Drivers" rel="noopener nofollow ugc">https://www.phoronix.com/news/Linux-Disable-RNDIS-Drivers</a>, <a href="https://www.phoronix.com/news/Linux-RNDIS-Removal-EOY2024" rel="noopener nofollow ugc">https://www.phoronix.com/news/Linux-RNDIS-Removal-EOY2024</a>) I would consider this very high-risk and would NOT enable it.</li>
</ul>
</li>
<li>Bluetooth dongles
<ul>
<li>Could be used to attach arbitrary devices to systems remotely, but this would require some user interaction. Unsure what the implications of a malicious Bluetooth dongle would be. Internal Bluetooth cards actually use the USB bus, but they’ll be present on boot and thus allowed, if everything works as expected.</li>
</ul>
</li>
<li>2FA keys
<ul>
<li>I believe these present themselves as a human interface device, not sure how safe or unsafe this is or if it’s feasible to allow it by default.</li>
</ul>
</li>
<li>Anything else we should consider allowing or not allowing by default?</li>
</ul>
          <p><a href="https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248/1">Read full topic</a></p>
        ]]></description>
        <link>https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248/1</link>
        <pubDate>Sun, 24 Aug 2025 02:33:02 +0000</pubDate>
        <guid isPermaLink="false">forums.kicksecure.com-post-1248-1</guid>
        <source url="https://forums.kicksecure.com/t/usbguard-what-should-we-allow-or-disallow-by-default/1248.rss">USBGuard - what should we allow or disallow by default?</source>
      </item>
  </channel>
</rss>
