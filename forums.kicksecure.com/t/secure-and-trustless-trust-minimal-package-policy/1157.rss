<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Secure and Trustless/Trust Minimal Package Policy</title>
    <link>https://forums.kicksecure.com/t/secure-and-trustless-trust-minimal-package-policy/1157</link>
    <description>The package is only going to be as secure and up-to-date as the upstream developers made it. There must be no interference or external involvement in adding or removing code from any package (no package maintainer, only to make the package work as is from the upstream).

### Why

We have the Debian design, and we&#39;ve seen how flawed it is when it comes to security and feature fixes. It&#39;s horrible in every aspect. What we get from Debian is, at best, working software, but that doesn’t mean it’s secure, up-to-date, or even always stable. Issues like packages crashing on shutdown when clicking X or freezing on specific Y action, are common (because they are already in the distro passing freeze timeline without upstream fixes), and such bugs when occurs are unlikely to be addressed in a timely manner.

A major security flaw in Debian and Debian-like philosophies is that if the upstream of a package fixes a security issue and pushes it to their users, Debian remains unaware of it and will not include the fix in their own package unless it is documented or assigned a CVE. As a result, users remain vulnerable for up to maybe entire five years.

Another issue is the complexity trust in the chain of delivery. The more people who can add, remove, or manipulate the code, the more trust becomes a concern. If the code goes from developer X to intermediary Y (or even more intermediaries) before reaching the user, then the user must trust not only X but also Y and anyone else in the chain. Moreover, X doesn&#39;t know Y or their practices, so X must also trust Y not to tamper with the code before reaching the user. This design introduces unnecessary trust assumptions. Code must be delivered directly from X to the user.

Note: Operating system developers should only interact with core/system-level packages, such as the kernel or desktop environment or VM configs or so.</description>
    
    <lastBuildDate>Thu, 24 Jul 2025 13:56:45 +0000</lastBuildDate>
    <category>Development</category>
    <atom:link href="https://forums.kicksecure.com/t/secure-and-trustless-trust-minimal-package-policy/1157.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Secure and Trustless/Trust Minimal Package Policy</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>DM = distribution maintainer</p>
<aside class="quote no-group" data-username="nurmagoz" data-post="1" data-topic="1157">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://forums.kicksecure.com/letter_avatar_proxy/v4/letter/n/8e7dd6/48.png" class="avatar"> nurmagoz:</div>
<blockquote>
<p>The package is only going to be as secure and up-to-date as the upstream developers made it.</p>
</blockquote>
</aside>
<p>secure:<br>
DMs can and do sometimes add:</p>
<ul>
<li>Mandatory access control</li>
<li>systemd hardening (capabilities… some introduction found here: <a href="https://github.com/alegrey91/systemd-service-hardening" class="inline-onebox">GitHub - alegrey91/systemd-service-hardening: Basic guide to harden systemd services</a>)</li>
</ul>
<aside class="quote no-group" data-username="nurmagoz" data-post="1" data-topic="1157">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://forums.kicksecure.com/letter_avatar_proxy/v4/letter/n/8e7dd6/48.png" class="avatar"> nurmagoz:</div>
<blockquote>
<p>There must be no interference or external involvement in adding or removing code from any package (no package maintainer, only to make the package work as is from the upstream).</p>
</blockquote>
</aside>
<p>This interference as you call it is an expression of values.</p>
<p>values:</p><aside class="quote quote-modified" data-post="1" data-topic="1159">
  <div class="title">
    <div class="quote-controls"></div>
    <img alt="" width="24" height="24" src="https://forums.kicksecure.com/letter_avatar_proxy/v4/letter/p/b2d939/48.png" class="avatar">
    <a href="https://forums.kicksecure.com/t/proprietary-tyrant-competitors-and-project-values/1159">Proprietary tyrant competitors and project values</a> <a class="badge-category__wrapper " href="https://forums.kicksecure.com/c/development/7"><span data-category-id="7" style="--category-badge-color: #25AAE2; --category-badge-text-color: #FFF;" data-drop-close="true" class="badge-category " title="Development of Kicksecure software and source code."><span class="badge-category__name">Development</span></span></a>
  </div>
  <blockquote>
    I am not worried about this. 
Related wiki chapter: 
<a href="https://www.kicksecure.com/wiki/Miscellaneous_Threats_to_User_Freedom#Freedom_vs_Tyrant_Security">Freedom vs Tyrant Security</a> 
Hypothetical user quote: 

Due to lack of &lt;insert cool security feature&gt; by proprietary tyrant, I switched from Debian/Kicksecure to Google Android/iOS. 

That user doesn’t exist or is a minority infeasible to chase. 
In any case, we obviously cannot directly compete with proprietary tyrant companies with billions of USD in funding. That’s mission impossible. 
We can only compete on values. 
Such values include (no…
  </blockquote>
</aside>

<p>Packing policy is based on the values of the distribution:<br>
<a href="https://www.kicksecure.com/wiki/Dev/About_Debian_Packaging#Purpose_of_Packaging">Purpose of Packaging</a></p>
<aside class="quote no-group" data-username="nurmagoz" data-post="1" data-topic="1157">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://forums.kicksecure.com/letter_avatar_proxy/v4/letter/n/8e7dd6/48.png" class="avatar"> nurmagoz:</div>
<blockquote>
<p>Issues like packages crashing on shutdown when clicking X or freezing on specific Y action, are common (because they are already in the distro passing freeze timeline without upstream fixes), and such bugs when occurs are unlikely to be addressed in a timely manner.</p>
</blockquote>
</aside>
<p>Rolling will have more issues constantly introduced. Debian stable has a purpose: It’s stable.</p>
<aside class="quote no-group" data-username="nurmagoz" data-post="1" data-topic="1157">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://forums.kicksecure.com/letter_avatar_proxy/v4/letter/n/8e7dd6/48.png" class="avatar"> nurmagoz:</div>
<blockquote>
<p>What we get from Debian is, at best, working software, but that doesn’t mean it’s secure, up-to-date, or even always stable.</p>
</blockquote>
</aside>
<aside class="quote no-group" data-username="nurmagoz" data-post="1" data-topic="1157">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://forums.kicksecure.com/letter_avatar_proxy/v4/letter/n/8e7dd6/48.png" class="avatar"> nurmagoz:</div>
<blockquote>
<p>A major security flaw in Debian and Debian-like philosophies is that if the upstream of a package fixes a security issue and pushes it to their users, Debian remains unaware of it and will not include the fix in their own package unless it is documented or assigned a CVE.</p>
</blockquote>
</aside>
<p>Needs to be contextualized.</p>
<p>Kicksecure, Whonix server running Debian stable /  Kicksecure:<br>
12 years at time of writing.</p>
<p>Website known hacked, defaced through server hacking: 0</p>
<p>affected by xz backdoor: no</p>
<p>Rolling distributions: affected by xz backdoor: yes.</p>
<p>Ticket:</p>
<aside class="quote quote-modified" data-post="1" data-topic="1139">
  <div class="title">
    <div class="quote-controls"></div>
    <img alt="" width="24" height="24" src="https://forums.kicksecure.com/user_avatar/forums.kicksecure.com/arraybolt3/48/88_2.png" class="avatar">
    <a href="https://forums.kicksecure.com/t/rolling-vs-stable-release-brainstorming/1139">Rolling vs. Stable release brainstorming</a> <a class="badge-category__wrapper " href="https://forums.kicksecure.com/c/development/7"><span data-category-id="7" style="--category-badge-color: #25AAE2; --category-badge-text-color: #FFF;" data-drop-close="true" class="badge-category " title="Development of Kicksecure software and source code."><span class="badge-category__name">Development</span></span></a>
  </div>
  <blockquote>
    Detailed overview of the issues with stable and rolling release distributions: <a href="https://www.kicksecure.com/wiki/Dev/Stable_vs_Rolling_Distributions" class="inline-onebox" rel="noopener nofollow ugc">Stable vs Rolling Distributions - Security Analysis</a> 
Kicksecure’s current development strategy for the most part has been to harden Debian as much as is practically possible. This seems to have been working well for the most part, but there are some worries about the safety of some of the rather outdated software that Debian provides us. In particular: 

Critical, extremely complicated software like Firefox ESR and Th…
  </blockquote>
</aside>

<p>Related:</p>
<aside class="onebox allowlistedgeneric" data-onebox-src="https://www.kicksecure.com/wiki/Stable_Version_User_Experience">
  <header class="source">
      <img src="https://www.kicksecure.com/favicon.svg?hsversion-headscript-replacement-by-server=1&amp;hsversion_from_server_replacement_unixtime=1753349424" class="site-icon" width="40" height="40">

      <a href="https://www.kicksecure.com/wiki/Stable_Version_User_Experience" target="_blank" rel="noopener" title="10:41AM - 28 April 2025">Kicksecure – 28 Apr 25</a>
  </header>

  <article class="onebox-body">
    

<h3><a href="https://www.kicksecure.com/wiki/Stable_Version_User_Experience" target="_blank" rel="noopener">Kicksecure Stable Version User Experience</a></h3>

  <p>Aims for a seamless and robust user experience in the stable release of Kicksecure</p>


  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

<p>(Wiki spam / forum spam does not count. Not based on hacking.)</p>
<aside class="quote no-group" data-username="nurmagoz" data-post="1" data-topic="1157">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="24" height="24" src="https://forums.kicksecure.com/letter_avatar_proxy/v4/letter/n/8e7dd6/48.png" class="avatar"> nurmagoz:</div>
<blockquote>
<p>Another issue is the complexity trust in the chain of delivery. The more people who can add, remove, or manipulate the code, the more trust becomes a concern. If the code goes from developer X to intermediary Y (or even more intermediaries) before reaching the user, then the user must trust not only X but also Y and anyone else in the chain. Moreover, X doesn’t know Y or their practices, so X must also trust Y not to tamper with the code before reaching the user. This design introduces unnecessary trust assumptions. Code must be delivered directly from X to the user.</p>
</blockquote>
</aside>
<p>again:<br>
<a href="https://www.kicksecure.com/wiki/Dev/About_Debian_Packaging#Purpose_of_Packaging">Purpose of Packaging</a></p>
<p>Example… Reproducible builds…</p>
<p>Do you want grub or any other package reproducible?</p>
<p>Take the patch, here example for grub:</p>
<p><a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=787795" class="onebox" target="_blank" rel="noopener">https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=787795</a></p>
<p>Here’s a “small” list of patches:<br>
<a href="https://udd.debian.org/dev/bugs.cgi?release=any&amp;patch=only&amp;merged=ign&amp;reproducible=1&amp;sortby=id&amp;sorto=asc&amp;format=html#results" class="onebox" target="_blank" rel="noopener">https://udd.debian.org/dev/bugs.cgi?release=any&amp;patch=only&amp;merged=ign&amp;reproducible=1&amp;sortby=id&amp;sorto=asc&amp;format=html#results</a></p>
<p>(There’s also a larger list of patches for reproducible builds.)</p>
<p>Either,</p>
<ul>
<li>A) non-reproducible and no patch, or</li>
<li>B) reproducible and patched</li>
</ul>
<p>Choose one.</p>
<p>Want both? Maybe. If the patch gets merged upstream.</p>
<p>Sure. That’s the plan.</p>
<p>But what when upstream is slow and/or patch change requests?</p>
<p>That’s the case for grub:<br>
<a href="https://www.kicksecure.com/wiki/Dev/boot#GRUB_Slow_Upstream">GRUB Slow Upstream</a></p>
<p>Meanwhile the choice is between A and B.</p>
<p>Don’t want any intermediaries? Use Linux From Scratch.</p>
<p><a href="https://www.linuxfromscratch.org/" class="onebox" target="_blank" rel="noopener">https://www.linuxfromscratch.org/</a></p>
<p>Too complicated? Use a Linux distribution.</p>
<p>Want both no intermediaries and easy? Unavailable.</p>
          <p><a href="https://forums.kicksecure.com/t/secure-and-trustless-trust-minimal-package-policy/1157/2">Read full topic</a></p>
        ]]></description>
        <link>https://forums.kicksecure.com/t/secure-and-trustless-trust-minimal-package-policy/1157/2</link>
        <pubDate>Thu, 24 Jul 2025 13:56:45 +0000</pubDate>
        <guid isPermaLink="false">forums.kicksecure.com-post-1157-2</guid>
        <source url="https://forums.kicksecure.com/t/secure-and-trustless-trust-minimal-package-policy/1157.rss">Secure and Trustless/Trust Minimal Package Policy</source>
      </item>
      <item>
        <title>Secure and Trustless/Trust Minimal Package Policy</title>
        <dc:creator><![CDATA[nurmagoz]]></dc:creator>
        <description><![CDATA[
            <p>The package is only going to be as secure and up-to-date as the upstream developers made it. There must be no interference or external involvement in adding or removing code from any package (no package maintainer, only to make the package work as is from the upstream).</p>
<h3><a name="p-2991-why-1" class="anchor" href="https://forums.kicksecure.com#p-2991-why-1"></a>Why</h3>
<p>We have the Debian design, and we’ve seen how flawed it is when it comes to security and feature fixes. It’s horrible in every aspect. What we get from Debian is, at best, working software, but that doesn’t mean it’s secure, up-to-date, or even always stable. Issues like packages crashing on shutdown when clicking X or freezing on specific Y action, are common (because they are already in the distro passing freeze timeline without upstream fixes), and such bugs when occurs are unlikely to be addressed in a timely manner.</p>
<p>A major security flaw in Debian and Debian-like philosophies is that if the upstream of a package fixes a security issue and pushes it to their users, Debian remains unaware of it and will not include the fix in their own package unless it is documented or assigned a CVE. As a result, users remain vulnerable for up to maybe entire five years.</p>
<p>Another issue is the complexity trust in the chain of delivery. The more people who can add, remove, or manipulate the code, the more trust becomes a concern. If the code goes from developer X to intermediary Y (or even more intermediaries) before reaching the user, then the user must trust not only X but also Y and anyone else in the chain. Moreover, X doesn’t know Y or their practices, so X must also trust Y not to tamper with the code before reaching the user. This design introduces unnecessary trust assumptions. Code must be delivered directly from X to the user.</p>
<p>Note: Operating system developers should only interact with core/system-level packages, such as the kernel or desktop environment or VM configs or so.</p>
          <p><a href="https://forums.kicksecure.com/t/secure-and-trustless-trust-minimal-package-policy/1157/1">Read full topic</a></p>
        ]]></description>
        <link>https://forums.kicksecure.com/t/secure-and-trustless-trust-minimal-package-policy/1157/1</link>
        <pubDate>Thu, 24 Jul 2025 10:38:42 +0000</pubDate>
        <guid isPermaLink="false">forums.kicksecure.com-post-1157-1</guid>
        <source url="https://forums.kicksecure.com/t/secure-and-trustless-trust-minimal-package-policy/1157.rss">Secure and Trustless/Trust Minimal Package Policy</source>
      </item>
  </channel>
</rss>
