<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:discourse="http://www.discourse.org/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Development - Kicksecure Forums</title>
    <link>https://forums.kicksecure.com/c/development/7</link>
    <description>Topics in the &#39;Development&#39; category Development of Kicksecure software and source code.</description>
    
      <lastBuildDate>Tue, 22 Jul 2025 20:51:03 +0000</lastBuildDate>
      <atom:link href="https://forums.kicksecure.com/c/development/7.rss" rel="self" type="application/rss+xml" />
        <item>
          <title>Operating System from Heaven</title>
          <dc:creator><![CDATA[nurmagoz]]></dc:creator>
          <category>Development</category>
          <description><![CDATA[
            <p>Based on my past experience with operating systems and software, there is still no great secure operating system developed, especially one based on free software. Most of the necessary software exists, but the challenge lies in integrating it all into a cohesive whole to produce the most secure operating system.</p>
<p>What I will add here are software that already exist in reality, not theoretical ones.</p>
<h1><a name="p-2980-kernel-system-1" class="anchor" href="https://forums.kicksecure.com#p-2980-kernel-system-1"></a>Kernel (system)</h1>
<p>Sadly, there is no reliable or usable freedom operating system based on a microkernel design. What we have are only monolithic ones, based on the Linux kernel.</p>
<p>Linux, by design, does not offer the same level of security as a microkernel. <a href="https://en.wikipedia.org/wiki/Tanenbaum%E2%80%93Torvalds_debate#Continued_dialogue">It is considered obsolete</a>; nobody would want to build an operating system from scratch based on a monolithic design in nowadays.</p>
<p>Alternatives?</p>
<ul>
<li><a href="https://sel4.systems/">Sel4</a></li>
<li><a href="https://doc.redox-os.org/book/microkernels.html">Redox</a></li>
<li><a href="https://fuchsia.dev/fuchsia-src/concepts/kernel">Zircon</a></li>
</ul>
<p>All mentioned are in active development and free software (sel4 is copyleft).</p>
<p>What i would avoid for sure is Zircon, because its google based.</p>
<p>What’s left are seL4 and Redox. Both are good, and if I had to choose one, I would choose seL4 due to its maturity.</p>
<p>Note (1): Minix and GNUmach are inactive.<br>
Note (2): Hybrid kernel is not an option.</p>
<h1><a name="p-2980-packages-policy-2" class="anchor" href="https://forums.kicksecure.com#p-2980-packages-policy-2"></a>Packages Policy</h1>
<p>The package is only going to be as secure and up-to-date as the upstream developers made it. There must be no interference or external involvement in adding or removing code from any package (no package maintainer).</p>
<h3><a name="p-2980-why-3" class="anchor" href="https://forums.kicksecure.com#p-2980-why-3"></a>Why</h3>
<p>We have the Debian design, and we’ve seen how flawed it is when it comes to security and feature fixes. It’s horrible in every aspect. What we get from Debian is, at best, working software, but that doesn’t mean it’s secure, up-to-date, or even stable. Issues like packages crashing on shutdown when clicking X or freezing on specific Y action, are common, and such bugs when occurs are unlikely to be addressed in a timely manner.</p>
<p>A major security flaw in Debian and Debian-like philosophies is that if the upstream of a package fixes a security issue and pushes it to their users, Debian often remains unaware of it and will not include the fix in their own package unless it is documented or assigned a CVE. As a result, users remain vulnerable for up to maybe entire five years.</p>
<p>Another issue is the increased complexity in the chain of delivery. The more people who can add, remove, or manipulate the code, the more trust becomes a concern. If the code goes from developer X to intermediary Y (or even more intermediaries) before reaching the user, then the user must trust not only X but also Y and anyone else in the chain. Moreover, X doesn’t know Y or their practices, so X must also trust Y not to tamper with the code. This design introduces unnecessary trust assumptions. Code must be delivered directly from X to the user.</p>
<p>Note: Operating system developers should only interact with core/system-level packages, such as the kernel or desktop environment or VM configs or so.</p>
<h1><a name="p-2980-system-vs-user-packages-4" class="anchor" href="https://forums.kicksecure.com#p-2980-system-vs-user-packages-4"></a>System VS User Packages</h1>
<p>System packages: Are going to be immutable, meaning read-only, no ability to modify with any rights (This helps as well with <a href="https://www.kicksecure.com/wiki/Verified_Boot">Verified Boot</a>).</p>
<p>User packages: Will always be kept up to date.</p>
<h1><a name="p-2980-kernel-userapp-per-vm-apv-5" class="anchor" href="https://forums.kicksecure.com#p-2980-kernel-userapp-per-vm-apv-5"></a>Kernel (user)/App-per-VM (ApV)</h1>
<p>Realistically, having pure packages working directly with seL4 is not practical. It could take 10 to 20 years or even longer. (Linux has been around for over 30 years, and there are still packages that are Windows-only.)</p>
<p>So to solve this issue, we gonna use an already functional kernel which is linux!.. ok hold on a second didnt we just say that linux is a bad design? Thats correct if its used as the main operating system kernel, but if its used in a VM and that VM runs only a single application like firefox or thunderbird…etc the danger drastically decreased/minimized.</p>
<p>Note: AppArmor, SELinux, Firejail, Containers… all are flawed designs when it comes to relying on them for security with packages running on Linux directly on hardware.</p>
<h1><a name="p-2980-vm-per-package-per-user-compartmentalization-6" class="anchor" href="https://forums.kicksecure.com#p-2980-vm-per-package-per-user-compartmentalization-6"></a>VM per Package per User (compartmentalization)</h1>
<p>Each VM will run at the user level, and every VM will have its own dedicated user account. This isolation ensures that if a VM is compromised, it won’t lead to the compromise of all user packages or affect other VMs.</p>
<h1><a name="p-2980-default-block-all-7" class="anchor" href="https://forums.kicksecure.com#p-2980-default-block-all-7"></a>Default Block All</h1>
<p>By default, when any app is installed in the VM, nothing is allowed automatically. Every permission including internet access must be explicitly granted by the user. This approach prevents any unwanted permissions from being applied silently without the user’s notice or consent.</p>
<h1><a name="p-2980-no-backward-nor-sideward-compatibility-8" class="anchor" href="https://forums.kicksecure.com#p-2980-no-backward-nor-sideward-compatibility-8"></a>No Backward Nor Sideward compatibility</h1>
<p>No Backward: The operating system will continue updating itself for supported XYZ hardware. Once any hardware becomes obsolete, it will no longer be compatible, no legacy support.</p>
<p>No Sideward: There will be no compatibility for Linux, Windows, or BSD software at the system level. Compatibility may exist in App-per-VM. By default, only Linux apps are supported.</p>
<p>Additionally, if any app running in a VM does not work with a specific Linux version or hardware architecture, it is not the operating system’s responsibility to ensure compatibility (upstream issue).</p>
<h1><a name="p-2980-packages-source-app-per-vm-9" class="anchor" href="https://forums.kicksecure.com#p-2980-packages-source-app-per-vm-9"></a>Packages Source (App-per-VM)</h1>
<p>One might say that hosting our own packages on our own servers would be the ideal solution, and that’s true. However, with a small team and limited resources, that’s not currently feasible (though it remains the long-term goal).</p>
<p>What we can do instead is source packages from existing systems, whether Gentoo, Arch, Nix, or others as long as we can obtain pure, upstream, patchless packages. Reproducibility is essential here to ensure that the packages have not been tampered with.</p>
<p>Note: We can also support App(per-VM) rollback, or install older version directly, since these packages already exists in these OSs repository.</p>
<p>This approach doesn’t conflict with the core philosophy of keep it updated, as the primary focus remains on using updated software, not rollbacks.</p>
<h1><a name="p-2980-app-per-vm-hypervisor-type-10" class="anchor" href="https://forums.kicksecure.com#p-2980-app-per-vm-hypervisor-type-10"></a>App-per-VM Hypervisor type</h1>
<p>Type 1 (bare-metal) hypervisors will be used for minimalism, reduced attack surface, and better performance.</p>
<p>seL4 provides <a href="https://docs.sel4.systems/projects/virtualization/docs/libsel4vm.html">libsel4vm</a>, which fits well with this design.</p>
<h1><a name="p-2980-package-manager-security-11" class="anchor" href="https://forums.kicksecure.com#p-2980-package-manager-security-11"></a>Package Manager Security</h1>
<p>All package delivery must comply with <a href="https://theupdateframework.io/docs/overview/">TUF</a>, meaning delivery path of the packages must be secured without the depends on TLS to do that.</p>
<p>Note: This level of security is not fully implemented by any existing package manager that I’m aware of. However, it can be enforced when using our own packages, especially in the App-per-VM model.</p>
<h1><a name="p-2980-bootstrappability-12" class="anchor" href="https://forums.kicksecure.com#p-2980-bootstrappability-12"></a>Bootstrappability</h1>
<p>I think this is possible, since the OS will be with minimal packages (as a system level). [<a href="https://www.kicksecure.com/wiki/Dev/bootstrappable_builds">ref</a>]</p>
<h1><a name="p-2980-wayland-only-13" class="anchor" href="https://forums.kicksecure.com#p-2980-wayland-only-13"></a>Wayland only</h1>
<p>There wont be x11/xorg nor xwayland, either wayland or no land.</p>
<h1><a name="p-2980-no-rescue-mode-14" class="anchor" href="https://forums.kicksecure.com#p-2980-no-rescue-mode-14"></a>No Rescue mode</h1>
<p>Rescue mode is like giving a backdoor to your own OS or software. If you break your system or forget your password, it’s your responsibility, no one else’s and no help will be provided, because there’s nothing anyone can do.</p>
<p>This also encourages users to maintain proper backups of their data, whether on their own hardware or in the cloud.</p>
<p>(Rollback and Snapshots helps as well)</p>
<h1><a name="p-2980-architecture-cpu-support-15" class="anchor" href="https://forums.kicksecure.com#p-2980-architecture-cpu-support-15"></a>Architecture &amp; CPU Support</h1>
<p>Only x86 will be supported, due to its widespread use (Intel or AMD CPUs). Support may be extended in the future to other freedom (or almost freedom) based architectures, such as RISC-V.</p>
<p>ARM or similar proprietary architectures will not be supported—there’s no reason to waste time on them. Supporting the most common proprietary architecture (x86) is sufficient. (Though seL4 supports ARM).</p>
<h1><a name="p-2980-no-stupid-or-old-devices-support-16" class="anchor" href="https://forums.kicksecure.com#p-2980-no-stupid-or-old-devices-support-16"></a>No Stupid or OLD Devices Support</h1>
<p>There wont be any old or nonsense software support in the system level (like IRC in the kernel?! or Floppy Disk Support…)</p>
<p>If necessary, such support may be possible within the App-per-VM (ApV) model, since it’s based on Linux and already includes support for these kinds of legacy features. However, this will never be a priority.</p>
<h1><a name="p-2980-only-latestbest-encryption-used-17" class="anchor" href="https://forums.kicksecure.com#p-2980-only-latestbest-encryption-used-17"></a>Only Latest/Best Encryption Used</h1>
<p>Since there will be no backward compatibility, only the best and most secure options available will be used, whether in TLS versions, cipher suites, OS-level encryption, or any other security-related components.</p>
<h1><a name="p-2980-offline-installation-18" class="anchor" href="https://forums.kicksecure.com#p-2980-offline-installation-18"></a>Offline Installation</h1>
<p>It is more secure to avoid installing the operating system while connected to the internet, as also advised in <a href="https://www.debian.org/doc/manuals/securing-debian-manual/ch03s03.en.html">Debian’s security manual</a>.</p>
<h1><a name="p-2980-offline-system-core-19" class="anchor" href="https://forums.kicksecure.com#p-2980-offline-system-core-19"></a>Offline System Core</h1>
<p>Similar to Qubes OS, the system core/base will not be connected to the internet (essential for security purposes).</p>
<h1><a name="p-2980-non-systemd-init-20" class="anchor" href="https://forums.kicksecure.com#p-2980-non-systemd-init-20"></a>Non-Systemd Init</h1>
<p>Although not a direct security issue on its own, systemd is a bulky piece of software and has been <a href="https://without-systemd.org/wiki/index_php/Arguments_against_systemd/">heavily criticized</a> for numerous things. The good news is that Genode OS has developed its own lightweight <a href="https://genode.org/documentation/genode-foundations/21.05/system_configuration/The_init_component.html">init component</a> that works with seL4.</p>
<h1><a name="p-2980-optional-preferable-21" class="anchor" href="https://forums.kicksecure.com#p-2980-optional-preferable-21"></a>Optional Preferable</h1>
<h3><a name="p-2980-btrfssnapshotstimeshift-like-22" class="anchor" href="https://forums.kicksecure.com#p-2980-btrfssnapshotstimeshift-like-22"></a>Btrfs/Snapshots/Timeshift like</h3>
<p>It should be easily to achieve this with immutable upgrades (you can rollback to the previous state).</p>
<h3><a name="p-2980-server-support-23" class="anchor" href="https://forums.kicksecure.com#p-2980-server-support-23"></a>Server Support</h3>
<p>Finding a way to make ApV able to manage server/s.</p>
<h3><a name="p-2980-fsdg-consideration-24" class="anchor" href="https://forums.kicksecure.com#p-2980-fsdg-consideration-24"></a>FSDG Consideration</h3>
<p>This all can go through only supporting freedom software (software for the ApV must be taken from FSDG distro repository in this case).</p>
<h3><a name="p-2980-secureboot-25" class="anchor" href="https://forums.kicksecure.com#p-2980-secureboot-25"></a>Secureboot</h3>
<p>Only makes sense when it doesnt depend on microsoft keys.</p>
<h3><a name="p-2980-onion-repository-26" class="anchor" href="https://forums.kicksecure.com#p-2980-onion-repository-26"></a>Onion Repository</h3>
<p>Will harden the avoidance of targeted attack (<a href="https://www.kicksecure.com/wiki/Onionizing_Repositories#Introduction">explained here</a>).</p>
<h3><a name="p-2980-nested-virtualization-27" class="anchor" href="https://forums.kicksecure.com#p-2980-nested-virtualization-27"></a>Nested Virtualization</h3>
<p>This feature will be the responsibility of the seL4 team, whether they implement it correctly and securely or not. It’s particularly relevant in scenarios involving running an OS + VM inside another VM, or using a virtualizer/hypervisor within a VM (e.g. VirtualBox-in-VM).</p>
<h1><a name="p-2980-competitors-28" class="anchor" href="https://forums.kicksecure.com#p-2980-competitors-28"></a>Competitors</h1>
<p>Proprietary competitors are on the rise. HarmonyOS, for example, is arguably the most mature general-purpose microkernel-based OS developed in China. Google’s Fuchsia is another example. If we don’t stay ahead of these developments, control over security will slip from our hands, placing it instead in the hands of large corporations or state-backed entities.</p>
            <p><small>4 posts - 3 participants</small></p>
            <p><a href="https://forums.kicksecure.com/t/operating-system-from-heaven/1153">Read full topic</a></p>
          ]]></description>
          <link>https://forums.kicksecure.com/t/operating-system-from-heaven/1153</link>
          <pubDate>Tue, 22 Jul 2025 20:51:03 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>Yes</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.kicksecure.com-topic-1153</guid>
          <source url="https://forums.kicksecure.com/t/operating-system-from-heaven/1153.rss">Operating System from Heaven</source>
        </item>
        <item>
          <title>Kicksecure distro specific keyboard shortcuts</title>
          <dc:creator><![CDATA[init38]]></dc:creator>
          <category>Development</category>
          <description><![CDATA[
            <p>Well I wanted to give some feedback on accessibility/productivity via keyboard shortcuts that would be nice to have in Kicksecure. Xfce is a little different then others but I recall that the Xfce version of Manjaro had shortcuts specific to that OS even on Xfce. In fact I’m more then sure there was another distro that was discontinued but specifically had keymaps set for Chromebook hardware but I don’t member the name? It did however use Xfce as desktop env is what I’m getting at.</p>
<p>I manually created some keyboard shortcuts but these would make Kicksecure more productivity appealing.</p>
<ul>
<li>Whiskermenu shortcut</li>
</ul>
<p>Super key for menu drop down “Super L” for fast searching</p>
<p>command: <code>xfce4-popup-whiskermenu</code></p>
<ul>
<li>Screenshot shortcut</li>
</ul>
<p>Set to the “Print key” but some layouts might be the “End” key</p>
<p>command: <code>xfce4-screenshooter</code></p>
<ul>
<li>Lockscreen shortcut</li>
</ul>
<p>“Super + L” just like windows has for locking your workstation when leaving your desk.</p>
<p>command: <code>xscreensaver -lock</code></p>
<ul>
<li>Notepad shortcut</li>
</ul>
<p>“Super + N” or “Super + M” for mousepad since its the default notepad on xfce.</p>
<p>command: <code>mousepad</code></p>
<p>Volume controls (my hardware was not detected)</p>
<ul>
<li>Volume up</li>
</ul>
<p>command: <code>amixer -D pulse sset Master 5%+</code></p>
<ul>
<li>Volume down</li>
</ul>
<p>command: <code>amixer -D pulse sset Master 5%-</code></p>
<ul>
<li>Mute</li>
</ul>
<p>command: <code>amixer -D pulse sset Master toggle</code></p>
<p>Looking into how Kicksecure could set distro specific keyboard shortcuts would make it more complete since my assumption is Xfce is gonna stay.</p>
<p>P.S. Is there any other DE spins going to made for future releases?</p>
            <p><small>1 post - 1 participant</small></p>
            <p><a href="https://forums.kicksecure.com/t/kicksecure-distro-specific-keyboard-shortcuts/1147">Read full topic</a></p>
          ]]></description>
          <link>https://forums.kicksecure.com/t/kicksecure-distro-specific-keyboard-shortcuts/1147</link>
          <pubDate>Mon, 21 Jul 2025 07:00:49 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.kicksecure.com-topic-1147</guid>
          <source url="https://forums.kicksecure.com/t/kicksecure-distro-specific-keyboard-shortcuts/1147.rss">Kicksecure distro specific keyboard shortcuts</source>
        </item>
        <item>
          <title>Rolling vs. Stable release brainstorming</title>
          <dc:creator><![CDATA[arraybolt3]]></dc:creator>
          <category>Development</category>
          <description><![CDATA[
            <p>Detailed overview of the issues with stable and rolling release distributions: <a href="https://www.kicksecure.com/wiki/Dev/Stable_vs_Rolling_Distributions" class="inline-onebox" rel="noopener nofollow ugc">Stable vs Rolling Distributions - Security Analysis</a></p>
<p>Kicksecure’s current development strategy for the most part has been to harden Debian as much as is practically possible. This seems to have been working well for the most part, but there are some worries about the safety of some of the rather outdated software that Debian provides us. In particular:</p>
<ul>
<li>Critical, extremely complicated software like Firefox ESR and Thunderbird can sometimes get stuck with a known-vulnerable version in the latest version of Debian Stable for as long as a month.</li>
<li>Software that isn’t well-maintained may be left in a vulnerable state for long after the vulnerability is made public. (This happened with the zuluCrypt vulnerability discovered in Debian’s zuluCrypt packaging a couple weeks ago or so.)</li>
<li>Tangential to the above, bugs that aren’t considered to be that big of a deal may not be fixed in a stable release of Debian ever. This isn’t really a security issue necessarily, but it is a problem from a usability standpoint.</li>
</ul>
<p>These things would be more-or-less resolved if Kicksecure was a rolling-release distro, for instance by rebasing our code onto a rolling-release variant of Debian (if one were to exist - we sort of almost have one with Debian Testing, but it doesn’t quite serve the desired purpose perfectly). This however is not necessarily more secure:</p>
<ul>
<li>Rolling-release distros rolled out backdoored XZ code to end-users during the xz-utils attack. Thankfully (most of) those distros don’t seem to have been targeted by the backdoor at all, but in principle a backdoored upstream or similar supply chain attack can have a much worse impact when using a rolling release.</li>
<li>Rolling releases steadily introduce the latest bugs and vulnerabilities from upstream into the distro on a regular basis. (There isn’t really any way around this, this isn’t a criticism half so much of a statement of fact.) For software that isn’t so complex as to be riddled with unknown vulnerabilities like web browsers, this is a potentially increased danger.</li>
<li>Rolling releases can break a lot. An experienced user can go years or even over a decade without breaking a rolling release install beyond repair, but an inexperienced user can end up with a broken system within a few weeks if they accidentally do something like upgrade their system without checking what packages will be removed in the process. (I’d like to think I’m an experienced user, and I’ve nuked Debian Sid virtual machines multiple times doing this. Not fun.)</li>
</ul>
<p>It might be possible to combine the advantages of both stable and rolling releases, by keeping Kicksecure’s stable base, but offering “rolling” versions of specific packages like web browsers, email clients, (maybe?) media viewers, etc. Anything that has to handle highly complex untrusted data would be a good candidate for this sort of thing, especially software with a rapid-release cycle. We’re already moving in this direction to some decree with <a>Browser Choice</a>, which is in active development.</p>
<p>What are everyone’s thoughts on the above? Where could our docs use improvement? Are there ideas for how to get the best of both worlds (rolling and stable) other than just a stable base with specific rolling apps? What are some other apps we should probably think about making rolling or recommending that people install rolling versions of if they use those apps? Are there potential pitfalls we need to avoid with rolling apps? (On this last point, we probably should not do what KDE neon did to try to make the Qt and KDE stacks rolling on top of base Ubuntu - that way of doing things kept breaking things for people alarmingly frequently.)</p>
            <p><small>1 post - 1 participant</small></p>
            <p><a href="https://forums.kicksecure.com/t/rolling-vs-stable-release-brainstorming/1139">Read full topic</a></p>
          ]]></description>
          <link>https://forums.kicksecure.com/t/rolling-vs-stable-release-brainstorming/1139</link>
          <pubDate>Fri, 18 Jul 2025 01:30:18 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.kicksecure.com-topic-1139</guid>
          <source url="https://forums.kicksecure.com/t/rolling-vs-stable-release-brainstorming/1139.rss">Rolling vs. Stable release brainstorming</source>
        </item>
        <item>
          <title>Dracut compression research</title>
          <dc:creator><![CDATA[arraybolt3]]></dc:creator>
          <category>Development</category>
          <description><![CDATA[
            <p>Patrick asked me to look into the compression options offered by Dracut for initramfs compression. This is the results of that research, written here since the results are a bit lengthy and require the ability to post images for sharing the charts I made.</p>
<p><strong>tl;dr: I think we should use xz compression. It’s acceptably fast, it compresses way better, and there doesn’t seem to be any compelling reason to avoid it.</strong></p>
<p>The initramfs has to be decompressed by the kernel on boot, so I only researched compression algorithms supported by the kernel in Debian Bookworm. (Trixie supports the exact same compression algorithms, so this research should apply to Trixie as well, assuming the compression utilities perform similarly in Trixie to how they perform in Bookworm, which I find likely given the age of these utilities.)</p>
<p>Bookworm’s kernel and Dracut both support the following compression algorithms:</p>
<ul>
<li>gzip (this is what we’re using now)</li>
<li>lz4</li>
<li>lzma</li>
<li>lzo</li>
<li>xz</li>
<li>zstd</li>
<li>cat (uncompressed, taken into consideration to provide a best-case scenario for time and a worst-case scenario for size)</li>
</ul>
<p>Dracut also supports bzip2, but Bookworm’s and Trixie’s kernels both did not appear to support that.</p>
<p>To determine which algorithm was most likely desirable, I benchmarked them against each other. The following testing methodology was used:</p>
<ul>
<li>Create a file, <code>/etc/dracut.conf.d/99-compress.conf</code> to set the compression algorithm in.</li>
<li>For each compression algorithm, change <code>99-compress.conf</code> to specify the desired algorithm, then run <code>time sudo dracut --force</code> three times.</li>
<li>Record the output of <code>time</code> after each dracut invocation.</li>
<li>Record the size of the output initramfs after each dracut invocation.</li>
</ul>
<p>In all instances, the file size of the output initramfs was identical (to within a kilobyte at least) across all three runs of Dracut when using a single compression algorithm, so I only recorded file size once per algorithm. All tests were run in a KVM/QEMU virtual machine with 4 virtual CPUs, 4 GB RAM, and all host CPU features passed through to the guest (<code>-cpu host</code>). The host system has an i9-14900HX processor. The raw results of the benchmarks are as follows:</p>
<ul>
<li>gzip
<ul>
<li>run 1: <code>0.06s user 0.10s system 1% cpu 12.240 total</code></li>
<li>run 2: <code>0.01s user 0.02s system 0% cpu 10.907 total</code></li>
<li>run 3: <code>0.01s user 0.02s system 0% cpu 10.912 total</code></li>
<li>file size: <code>39724K</code></li>
</ul>
</li>
<li>lz4
<ul>
<li>run 1: <code>0.02s user 0.01s system 0% cpu 7.476 total</code></li>
<li>run 2: <code>0.02s user 0.01s system 0% cpu 7.408 total</code></li>
<li>run 3: <code>0.01s user 0.02s system 0% cpu 7.541 total</code></li>
<li>file size: <code>48064K</code></li>
</ul>
</li>
<li>lzma
<ul>
<li>run 1: <code>0.09s user 0.07s system 0% cpu 46.595 total</code></li>
<li>run 2: <code>0.01s user 0.02s system 0% cpu 45.677 total</code></li>
<li>run 3: <code>0.02s user 0.01s system 0% cpu 45.339 total</code></li>
<li>file size: <code>26292K</code></li>
</ul>
</li>
<li>lzop
<ul>
<li>run 1: <code>0.09s user 0.08s system 0% cpu 38.810 total</code></li>
<li>run 2: <code>0.02s user 0.01s system 0% cpu 37.862 total</code></li>
<li>run 3: <code>0.01s user 0.02s system 0% cpu 37.837 total</code></li>
<li>file size: <code>44880K</code></li>
</ul>
</li>
<li>xz
<ul>
<li>run 1: <code>0.09s user 0.08s system 1% cpu 11.655 total</code></li>
<li>run 2: <code>0.01s user 0.01s system 0% cpu 10.542 total</code></li>
<li>run 3: <code>0.02s user 0.01s system 0% cpu 10.571 total</code></li>
<li>file size: <code>28288K</code></li>
</ul>
</li>
<li>zstd
<ul>
<li>run 1: <code>0.10s user 0.07s system 1% cpu 8.676 total</code></li>
<li>run 2: <code>0.08s user 0.09s system 2% cpu 7.680 total</code></li>
<li>run 3: <code>0.01s user 0.01s system 0% cpu 7.404 total</code></li>
<li>file size: <code>33248K</code></li>
</ul>
</li>
<li>cat (no compression, baseline)
<ul>
<li>run 1: <code>0.09s user 0.08s system 3% cpu 5.279 total</code></li>
<li>run 2: <code>0.01s user 0.02s system 0% cpu 4.189 total</code></li>
<li>run 3: <code>0.01s user 0.02s system 0% cpu 4.252 total</code></li>
<li>file size: <code>136088K</code></li>
</ul>
</li>
</ul>
<p>I did not benchmark boot speed with each of the different algorithms used, although I did verify that the virtual machine booted with an initramfs made with each algorithm. The boot speed seemed pretty much the same to me with each algorithm, and would have been difficult to measure in an objective, reliable fashion. I will note, I may have noticed a very slight speedup during boot with the zstd algorithm.</p>
<p>The following two graphs are provided to visualize the data above (created using LibreOffice):</p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://forums.kicksecure.com/uploads/default/original/1X/e92324d818d85c5e818003116c0999d6539ad7a6.png" data-download-href="https://forums.kicksecure.com/uploads/default/e92324d818d85c5e818003116c0999d6539ad7a6" title="initramfs-gen-speed"><img src="https://forums.kicksecure.com/uploads/default/original/1X/e92324d818d85c5e818003116c0999d6539ad7a6.png" alt="initramfs-gen-speed" data-base62-sha1="xgqxRhWowoHkhwQKDySGIr6PCzI" width="605" height="340"></a></div><p></p>
<p></p><div class="lightbox-wrapper"><a class="lightbox" href="https://forums.kicksecure.com/uploads/default/original/1X/2bd2414d9be6f209da5f48a7de40331332b64632.png" data-download-href="https://forums.kicksecure.com/uploads/default/2bd2414d9be6f209da5f48a7de40331332b64632" title="initramfs-gen-efficiency"><img src="https://forums.kicksecure.com/uploads/default/original/1X/2bd2414d9be6f209da5f48a7de40331332b64632.png" alt="initramfs-gen-efficiency" data-base62-sha1="6fF02CNFpWuQxjjDkTxl0imYZz4" width="605" height="340"></a></div><p></p>
<p>Takeaways from the above data:</p>
<ul>
<li>From a size standpoint, lzma performed the best, lz4 performed the worst.</li>
<li>From a speed standpoint, zstd and lz4 are about tied for best speed, while lzma is the worst for speed.</li>
<li>lzo/lzop is certainly a bad choice - it approaches lzma in slowness while also making a file larger than gzip and almost as large as lz4. It’s the worst of all worlds combined.</li>
<li>xz is probably the most compelling as far as a balance between good speed and good compression - it’s almost as good as lzma as far as size, while being just a hair faster than gzip.</li>
<li>zstd is a bit of an improvement over gzip in size, while also being very very fast.</li>
</ul>
<p>I am of the opinion that xz is the best choice here based on this data, as our existing compression speed has been acceptable and shaving off 2-3 seconds per initramfs generation doesn’t seem that compelling except perhaps when doing ARM builds of Kicksecure on x86_64 hardware.</p>
<p>It is worth noting, people who know much more about compression tools under the hood than I do have complaints about design flaws in xz, which are documented <a href="https://www.nongnu.org/lzip/xz_inadequate.html" rel="noopener nofollow ugc">here</a>. I do not believe the issues mentioned in this article are of concern for the following reasons:</p>
<ul>
<li>The article primarily relates to xz’s suitability for long-term archival. Kernel initramfs files aren’t really something where “long-term archival” is a concern.</li>
<li>Most of the article focuses on xz’s lack of resiliency in the face of partial archive corruption. But we don’t care about this at all, we assume the initramfs is bit-for-bit identical to when it was created, and indeed in the future we will likely be signing the initramfs as part of Verified Boot (which will mandate that the initramfs be bit-for-bit idential to when it was created).</li>
<li>Other parts of the article focus on compatibility issues with different versions of xz. This also is not a concern - as long as dracut produces an initramfs that the Linux kernel can read and boot with, things are compatible enough for us.</li>
<li>The rest of the article appears to focus on various design decisions in xz that could have been made better. None of that is relevant for us though, since whatever feature set Dracut is using in xz is good enough to give it a very acceptable compression speed while also providing the second-smallest file size of any of the compression algorithms documented here. Even if xz could be better than it is, right now it’s better than everything else except maybe zstd if you really care about speed.</li>
</ul>
<p>Someone else I saw did <a href="https://linuxreviews.org/Comparison_of_Compression_Algorithms" rel="noopener nofollow ugc">similar compression performance benchmarking</a> and concluded that <code>zstd</code> was the best general-purpose algorithm, though the data they present shows that parallel xz actually performed better than zstd’s best compression in both compression size and speed. One concerning thing this article does point out though is that xz can use a lot of RAM. For this reason, I tried generating a dracut initramfs using xz compression in a Kicksecure-CLI VirtualBox VM with only 512 MB RAM. Memory consumption during the initramfs generation rose to a maximum of 318M according to htop, and went down to 263M once the initramfs was generated, meaning that dracut and whatever tools it ran (including xz) used about 55M of memory during the generation process. Only about 1.97M of swap ended up used. This is much more than both gzip and zstd (which both only require about 5M of memory), but seems acceptable to me. 55M is not that much, especially given that <code>fwupd</code> is just sitting there eating 97M while doing basically nothing.</p>
<p>As a final note, I checked <a href="http://cve.org" rel="noopener nofollow ugc">cve.org</a> to see if security vulnerabilities were found in either the xz or zstd compressors in the Linux kernel. I found no vulnerabilities for either algorithm (using the search terms “linuz kernel xz” and “linux kernel zstd”).</p>
<p>In conclusion, I believe xz is the best compression method for us to use with dracut, due to its slightly better performance and much better compression compared to our current default, gzip. zstd is my second choice, and may be what we want to use if we have problems with xz’s speed or memory consumption.</p>
            <p><small>10 posts - 3 participants</small></p>
            <p><a href="https://forums.kicksecure.com/t/dracut-compression-research/1131">Read full topic</a></p>
          ]]></description>
          <link>https://forums.kicksecure.com/t/dracut-compression-research/1131</link>
          <pubDate>Tue, 08 Jul 2025 00:48:15 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.kicksecure.com-topic-1131</guid>
          <source url="https://forums.kicksecure.com/t/dracut-compression-research/1131.rss">Dracut compression research</source>
        </item>
        <item>
          <title>Separate (some) user applications from the operating system</title>
          <dc:creator><![CDATA[arraybolt3]]></dc:creator>
          <category>Development</category>
          <description><![CDATA[
            <p>Android, iOS, macOS, and Chrome OS all provide a level of separation between user-installed applications and the operating system. The operating system may provide certain applications to the user, but those applications are not installed by the user and generally cannot be uninstalled or replaced. User-controllable applications are separated from the rest of the system, and generally are sandboxed to prevent them from doing damage if they turn out to be malicious or become compromised.</p>
<p>Debian (and by extension, Kicksecure) doesn’t do this so well. All packages in the repositories are essentially operating system components, with full permissions to do anything the user account the application is launched as allows. Core components like udev and systemd are installed directly alongside productivity apps like image viewers and web browsers. This is a bit messy from the standpoint of system organization, but it also poses a significant security hazard for obvious reasons (<a href="https://xkcd.com/1200/" rel="noopener nofollow ugc">XKCD 1200</a> sums up the issue nicely).</p>
<p>Users should be able to install arbitrary applications as OS components and give them elevated permissions, as they’ve always been able to do on Kicksecure and Whonix. But users should also be able to wall off applications into a sandbox of sorts if they don’t trust those applications or may have to process untrusted data with those applications.</p>
<p>Flatpak and Snap are relatively well-known attempts at bringing sandboxing and application isolation to Linux. Both of these are not exactly awesome solutions, because:</p>
<ul>
<li>Sandboxing controls under Linux can be somewhat flimsy without putting a great deal of work into doing things like whitelisting syscalls and the like. In some instances, Linux’s sandboxing features actually worsen security (user namespaces in particular allow access to kernel facilities that aren’t usually available to unprivileged users, exposing additional attack surface; this has been the source of numerous CVEs, but user namespaces are also required by applications that do sandboxing internally, like Chromium).</li>
<li>Users can loosen sandboxing very easily with Flatpak, and without too much effort with Snap, defeating the purpose of the sandbox.</li>
<li>Flatpak and Snap sandboxing oftentimes causes application malfunctions due to restricting resources that applications legitimately need access to.</li>
<li>Applications from the Flathub repository and Snap Store can be uploaded by arbitrary users. This is in contrast to the Debian archive, which requires some level of skill and trust for a packager to gain upload access to it, and where policies help to ensure better packaging quality in general. As a result, Flatpaks and Snaps are oftentimes more broken than apt packages, and it is easy to upload malware to the repositories.
<ul>
<li>Malware actually has been uploaded to the Snap Store and has caused severe damage in the past, with at least one person <a href="https://blog.popey.com/2024/02/exodus-bitcoin-wallet-490k-swindle/" rel="noopener nofollow ugc">losing the equivalent of $490,000</a> after plugging in cryptocurrency recovery data into a malicious Exodus Wallet snap. This particular incident underscores the fact that sandboxing apps isn’t really enough, apps can still be malicious without having to break out of a sandbox at all. <a href="https://blog.popey.com/2024/03/exodus-wallet-part-three/" rel="noopener nofollow ugc">This same kind of attack happened on the Snap Store multiple times.</a> This is why getting apps from a trusted repository is a good idea.</li>
</ul>
</li>
</ul>
<p>What we really want is some sort of virtual machine that is integrated with the host <em>enough</em> to allow apps in the VM to feel native or close to native, but sufficiently walled off so that applications cannot do damage to the host system or escape the VM. This would allow running “user applications” in a very tight yet highly compatible sandbox, and would allow pulling those applications from trusted repositories like the Debian repos. It would also allow users to install applications without having to boot into a sysmaint session.</p>
<p>Chrome OS has something similar to this with <a href="https://chromeos.dev/en/linux" rel="noopener nofollow ugc">Crostini</a>, and Windows has something similar to this with <a href="https://learn.microsoft.com/en-us/windows/wsl/tutorials/gui-apps" rel="noopener nofollow ugc">WSLg</a>. Something with a vaguely similar user experience would likely be acceptable, especially if an “app store” frontend of some sort was available so the user didn’t have to use a terminal to install sandboxed applications.</p>
            <p><small>15 posts - 3 participants</small></p>
            <p><a href="https://forums.kicksecure.com/t/separate-some-user-applications-from-the-operating-system/1120">Read full topic</a></p>
          ]]></description>
          <link>https://forums.kicksecure.com/t/separate-some-user-applications-from-the-operating-system/1120</link>
          <pubDate>Wed, 02 Jul 2025 03:21:55 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.kicksecure.com-topic-1120</guid>
          <source url="https://forums.kicksecure.com/t/separate-some-user-applications-from-the-operating-system/1120.rss">Separate (some) user applications from the operating system</source>
        </item>
        <item>
          <title>Panel items missing [feedback]</title>
          <dc:creator><![CDATA[desi_fubu]]></dc:creator>
          <category>Development</category>
          <description><![CDATA[
            <p>I am reaching out to share some observations regarding missing panel items in the desktop settings for the two users (boot sessions), USER and USERMAINT. These issues were noticed while booting in Live Mode USB, and I believe it would be beneficial to me to provide my feedback.</p>
<ul>
<li>
<p><strong>USER</strong></p>
<ul>
<li><em>Power Manager Icon Missing</em><br>
The battery level indicator is absent from the system tray. This is particularly inconvenient for laptop users who rely on this feature to monitor their battery life.</li>
</ul>
</li>
<li>
<p><strong>USERMAINT</strong></p>
<ul>
<li><em>Power Manager Icon Missing</em><br>
Similar to USER, the battery level indicator is also missing.</li>
<li><em>Time Clock Item Missing</em><br>
The Time Clock item is absent from the panel, which is a useful feature for quick access to the current time.</li>
<li><em>Window Buttons Missing</em><br>
The absence of window indicators making it difficult to manage open windows. This has led to me to frustration while multitasking, such as when using the terminal to launch Firefox (look up issues) and Mousepad (take notes) and another xterm for debugging commands.</li>
</ul>
</li>
</ul>
<p>Its good to leave the USERMAINT desktop minimal but the three above would not be too much to add to the panel.</p>
            <p><small>10 posts - 3 participants</small></p>
            <p><a href="https://forums.kicksecure.com/t/panel-items-missing-feedback/1108">Read full topic</a></p>
          ]]></description>
          <link>https://forums.kicksecure.com/t/panel-items-missing-feedback/1108</link>
          <pubDate>Sat, 28 Jun 2025 23:52:11 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.kicksecure.com-topic-1108</guid>
          <source url="https://forums.kicksecure.com/t/panel-items-missing-feedback/1108.rss">Panel items missing [feedback]</source>
        </item>
        <item>
          <title>Set Mousepad to Launch in New Windows instead of Tabs by Default</title>
          <dc:creator><![CDATA[desi_fubu]]></dc:creator>
          <category>Development</category>
          <description><![CDATA[
            <p>I wanted to share a minor suggestion regarding the default behavior of Mousepad, the text editor included in Xfce. While the default tabbed interface works well for many users, I personally find it a bit inconvenient or more like annoying. Hope this post doesn’t come across as annoying cause its nothing on Kicksecure but Xfce. Furthermore I suspect I’m not the only one who feels this way, especially for those of us who frequently switch between different desktop environments distro hopping and testing.</p>
<p>It would be nice if Mousepad could be configured by default within Kicksecure to open new instances in separate windows rather than tabs. This small change could greatly improve the user experience for those who prefer this behavior.</p>
<p>After some research, I discovered that this setting is managed via dconf (org) rather than a standard Xfce configuration file.</p>
<p>The following command can be used to set the desired behavior:</p>
<p><code>gsettings set org.xfce.mousepad.preferences.window opening-mode 'window'</code></p>
<p>To make this change persistent across the system, you could create a drop-in dconf file. For example, you could add the following to a (example file <code>/etc/dconf/db/00_kicksecure-default-apps</code>):</p>
<pre><code class="lang-auto">[org.xfce.mousepad.preferences.window]
opening-mode = 'window'
</code></pre>
<p>This would ensure that Mousepad opens new instances in separate windows by default. When I went to write notes on things inside of Live USB I couldn’t stand it making new tabs. This is what brought me here and I hope you give it a consideration.</p>
            <p><small>3 posts - 2 participants</small></p>
            <p><a href="https://forums.kicksecure.com/t/set-mousepad-to-launch-in-new-windows-instead-of-tabs-by-default/1107">Read full topic</a></p>
          ]]></description>
          <link>https://forums.kicksecure.com/t/set-mousepad-to-launch-in-new-windows-instead-of-tabs-by-default/1107</link>
          <pubDate>Sat, 28 Jun 2025 23:10:58 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.kicksecure.com-topic-1107</guid>
          <source url="https://forums.kicksecure.com/t/set-mousepad-to-launch-in-new-windows-instead-of-tabs-by-default/1107.rss">Set Mousepad to Launch in New Windows instead of Tabs by Default</source>
        </item>
        <item>
          <title>Argon2 pbkdf setup and hardening in Kicksecure</title>
          <dc:creator><![CDATA[ketodiet100]]></dc:creator>
          <category>Development</category>
          <description><![CDATA[
            <p>As of right now the time of writing the default LUKS Argon2id setup is 1GB (1048576 kb) for memory cost and the parallelism setting of 1-4 threads max.</p>
<p>These defaults were established to provide strong resistance to brute-force attacks by requiring significant computational resources, while capping parallelism to avoid excessive load on systems with limited cores. The memory cost ensures high RAM usage during key derivation, making GPU-based attacks more difficult, and the parallelism allows for multi-threaded processing up to 4 threads by default.</p>
<p>The iteration time is often set to around 2000 milliseconds, but memory and parallelism are the key parameters queried.</p>
<p>To verify these defaults you can use the <code>cryptsetup luksDump</code> command to inspect the current settings.</p>
<hr>
<p>Anyway others places have suggested and discussed that if a user has sufficient RAM they should increase it more then the default (1GB) manually.</p>
<p>Should Kicksecure use 1/2 or 1/3 of the total memory or have an option to in Graphical installer to set this?</p>
<p>I think the latter since having a option for advanced installs rather then an <em>“opt-in”</em> one size fits all approach. That would provide for flexibility and user by user use case when installing Kicksecure.</p>
<ul>
<li>1/2 available RAM example</li>
</ul>
<p><code>--pbkdf-memory $(awk -F ' ' '/MemTotal/ {printf "%.0f\n", $2 / 2}' /proc/meminfo)</code></p>
<ul>
<li>1/3 available RAM example</li>
</ul>
<p><code>--pbkdf-memory $(awk -F ' ' '/MemTotal/ {printf "%.0f\n", $2 / 3}' /proc/meminfo)</code></p>
<p>Typically or my understanding is that <code>cyrptsetup</code> will detect the max amount of threads available by the system and will use that when setting parallel defaults.<br>
Documenting how to upgrade a Luks Kicksecure install manually to increase the Argon2 memory cost might be worth mentioning.</p>
            <p><small>5 posts - 5 participants</small></p>
            <p><a href="https://forums.kicksecure.com/t/argon2-pbkdf-setup-and-hardening-in-kicksecure/1079">Read full topic</a></p>
          ]]></description>
          <link>https://forums.kicksecure.com/t/argon2-pbkdf-setup-and-hardening-in-kicksecure/1079</link>
          <pubDate>Fri, 06 Jun 2025 18:42:14 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.kicksecure.com-topic-1079</guid>
          <source url="https://forums.kicksecure.com/t/argon2-pbkdf-setup-and-hardening-in-kicksecure/1079.rss">Argon2 pbkdf setup and hardening in Kicksecure</source>
        </item>
        <item>
          <title>Investigate security (SUID) impact of polkitd and policykit libraries</title>
          <dc:creator><![CDATA[Patrick]]></dc:creator>
          <category>Development</category>
          <description><![CDATA[
            <p>Todo: research</p>
<p>We still have SUID (alike) functionality due to the following packages / libraries?</p>
<ul>
<li><code>polkitd</code></li>
<li><code>libpolkit-agent-1-0</code></li>
<li><code>libpolkit-gobject-1-0</code></li>
</ul>
<p>Potential consumers:</p>
<ul>
<li><code>udisksd</code></li>
<li><code>accounts-daemon</code></li>
</ul>
<p>context: <a href="https://www.kicksecure.com/wiki/SUID_Disabler_and_Permission_Hardener" class="inline-onebox">SUID Disabler and Permission Hardener</a></p>
<p>Originally brought up by <a href="https://www.reddit.com/user/Hizonner/">Hizonner</a> on <a href="https://www.reddit.com/r/Whonix/comments/1ktc1nb/comment/mvrnj3e/">https://www.reddit.com/r/Whonix/comments/1ktc1nb/comment/mvrnj3e/</a></p>
            <p><small>4 posts - 2 participants</small></p>
            <p><a href="https://forums.kicksecure.com/t/investigate-security-suid-impact-of-polkitd-and-policykit-libraries/1075">Read full topic</a></p>
          ]]></description>
          <link>https://forums.kicksecure.com/t/investigate-security-suid-impact-of-polkitd-and-policykit-libraries/1075</link>
          <pubDate>Tue, 03 Jun 2025 19:03:31 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.kicksecure.com-topic-1075</guid>
          <source url="https://forums.kicksecure.com/t/investigate-security-suid-impact-of-polkitd-and-policykit-libraries/1075.rss">Investigate security (SUID) impact of polkitd and policykit libraries</source>
        </item>
        <item>
          <title>Scira AI instead of Perplexity</title>
          <dc:creator><![CDATA[sam]]></dc:creator>
          <category>Development</category>
          <description><![CDATA[
            <p>In another chat, we discussed adding search engines and touched on the topic of Perplexity. I propose considering replacing Perplexity with Scira AI on kicksecure-welcome-page for the following reasons:</p>
<p>More functionality: Unlike Perplexity, Scira has more modes - 7 compared to 3 - and you can choose between chat only or internet overview only.</p>
<p>Convenience: No registration required, no window asking to register during use, free.</p>
<p>User safety: Scira informs about the absence of cryptocurrency and tokens and asks not to fall for any potential scams in its name on the internet</p>
<p>Open source: This is not a criterion for a search engine, but it aligns with the Freedom Values published on the Kicksecure website</p>
<p>Works with Tor/VPN without Captcha: Perplexity does not work with Tor and often asks to complete a Captcha for some locations with NordVPN and Mullvad VPN<br>
</p><div class="lightbox-wrapper"><a class="lightbox" href="https://forums.kicksecure.com/uploads/default/original/1X/d3f21cb0638a444a883e293495e0e75a6f3e9ca7.png" data-download-href="https://forums.kicksecure.com/uploads/default/d3f21cb0638a444a883e293495e0e75a6f3e9ca7" title="screen"><img src="https://forums.kicksecure.com/uploads/default/original/1X/d3f21cb0638a444a883e293495e0e75a6f3e9ca7.png" alt="screen" data-base62-sha1="ueXt4JQ6zaVrg7S3vUQKCvrDaqr" width="690" height="276" data-dominant-color="373839"></a></div><p></p>
            <p><small>9 posts - 3 participants</small></p>
            <p><a href="https://forums.kicksecure.com/t/scira-ai-instead-of-perplexity/1034">Read full topic</a></p>
          ]]></description>
          <link>https://forums.kicksecure.com/t/scira-ai-instead-of-perplexity/1034</link>
          <pubDate>Thu, 08 May 2025 20:45:33 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.kicksecure.com-topic-1034</guid>
          <source url="https://forums.kicksecure.com/t/scira-ai-instead-of-perplexity/1034.rss">Scira AI instead of Perplexity</source>
        </item>
        <item>
          <title>Testing Kicksecure 17.3.9.2</title>
          <dc:creator><![CDATA[sam]]></dc:creator>
          <category>Development</category>
          <description><![CDATA[
            <p>I tested the new version. It seems to be working great. The only issue is that I couldn’t change theme and background in sysmaintenance mode. Only the theme in the window manager changes. But maybe that’s how you intended it.<br>
The panel is very convenient! It just lacks buttons for viewing the log and searching the log by keyword. This would make the panel perfect and improve the convenience of administration - it’s convenient to administer the system in a few clicks.<br>
Will the maintenance panel be translated into other languages in the future?<br>
Thank you</p>
            <p><small>7 posts - 2 participants</small></p>
            <p><a href="https://forums.kicksecure.com/t/testing-kicksecure-17-3-9-2/1027">Read full topic</a></p>
          ]]></description>
          <link>https://forums.kicksecure.com/t/testing-kicksecure-17-3-9-2/1027</link>
          <pubDate>Mon, 05 May 2025 18:24:22 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.kicksecure.com-topic-1027</guid>
          <source url="https://forums.kicksecure.com/t/testing-kicksecure-17-3-9-2/1027.rss">Testing Kicksecure 17.3.9.2</source>
        </item>
        <item>
          <title>Installation methods</title>
          <dc:creator><![CDATA[suse211213]]></dc:creator>
          <category>Development</category>
          <description><![CDATA[
            <p>Request documented wiki to install kicksecure manually alongside calamares incl FDE</p>
<p>Possible in future?</p>
            <p><small>4 posts - 2 participants</small></p>
            <p><a href="https://forums.kicksecure.com/t/installation-methods/1026">Read full topic</a></p>
          ]]></description>
          <link>https://forums.kicksecure.com/t/installation-methods/1026</link>
          <pubDate>Mon, 05 May 2025 15:01:39 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.kicksecure.com-topic-1026</guid>
          <source url="https://forums.kicksecure.com/t/installation-methods/1026.rss">Installation methods</source>
        </item>
        <item>
          <title>Browser choice</title>
          <dc:creator><![CDATA[sam]]></dc:creator>
          <category>Development</category>
          <description><![CDATA[
            <p>Hello. browser choice - brilliant solution! This will close discussions about a secure browser, and new users will be able to get acquainted with new browsers that they did not know about. I would like to add 2 sentences for consideration:</p>
<ol>
<li>
<p>Add a signature “proprietary” or “not open source” if there are proprietary browsers in the list. I agree that describing browsers will be redundant due to possible bias, but information about the code is not biased and is very important in assessing security (browsers do not write about proprietary code on their own sites). This will allow new users to assess the risks of installing Google Chrome, Vivaldi, Opera, Yandex Browser… This information can be taken from the site <a href="http://alternativeto.net" rel="noopener nofollow ugc">alternativeto.net</a></p>
</li>
<li>
<p>Add a browser selection to open-link-confirmation. Users will be able to choose Tor Browser or Mullvad Browser with VPN for suspicious links. To have Tor Browser in the list, you can pre-install torbrowser-launcher in Kicksecure or use only torbrowser-launcher for Tor Browser installation from “browser choice” (manual installation from the site <a href="https://www.torproject.org/download/" class="inline-onebox" rel="noopener nofollow ugc">Tor Project | Download</a> does not add the browser to bin)</p>
</li>
</ol>
<p>Thank you!</p>
            <p><small>5 posts - 3 participants</small></p>
            <p><a href="https://forums.kicksecure.com/t/browser-choice/1025">Read full topic</a></p>
          ]]></description>
          <link>https://forums.kicksecure.com/t/browser-choice/1025</link>
          <pubDate>Mon, 05 May 2025 13:27:30 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.kicksecure.com-topic-1025</guid>
          <source url="https://forums.kicksecure.com/t/browser-choice/1025.rss">Browser choice</source>
        </item>
        <item>
          <title>Distro-morphing without installing package</title>
          <dc:creator><![CDATA[user9248]]></dc:creator>
          <category>Development</category>
          <description><![CDATA[
            <p>Hi,</p>
<p>I would like to manually do the Kicksecure system modifications.</p>
<p>On the wiki I was only able to find instructions for downloading the pre-modified Kicksecure disc image, or installing a Kicksecure package using apt from within Debian.</p>
<p>Can you help with my goal?</p>
            <p><small>3 posts - 3 participants</small></p>
            <p><a href="https://forums.kicksecure.com/t/distro-morphing-without-installing-package/955">Read full topic</a></p>
          ]]></description>
          <link>https://forums.kicksecure.com/t/distro-morphing-without-installing-package/955</link>
          <pubDate>Sun, 02 Mar 2025 08:02:26 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.kicksecure.com-topic-955</guid>
          <source url="https://forums.kicksecure.com/t/distro-morphing-without-installing-package/955.rss">Distro-morphing without installing package</source>
        </item>
        <item>
          <title>Poll: Should the Whisker Menu Be Changed? (Aesthetics)</title>
          <dc:creator><![CDATA[Quiksilver]]></dc:creator>
          <category>Development</category>
          <description><![CDATA[
            <p><strong>Should the Whisker Menu Be Changed to look more appealing?</strong></p>
<p><a href="https://forums.kicksecure.com/t/poll-should-the-whisker-menu-be-changed-aesthetics/917/1">Click to view the poll.</a></p>
            <p><small>4 posts - 4 participants</small></p>
            <p><a href="https://forums.kicksecure.com/t/poll-should-the-whisker-menu-be-changed-aesthetics/917">Read full topic</a></p>
          ]]></description>
          <link>https://forums.kicksecure.com/t/poll-should-the-whisker-menu-be-changed-aesthetics/917</link>
          <pubDate>Fri, 24 Jan 2025 20:21:03 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.kicksecure.com-topic-917</guid>
          <source url="https://forums.kicksecure.com/t/poll-should-the-whisker-menu-be-changed-aesthetics/917.rss">Poll: Should the Whisker Menu Be Changed? (Aesthetics)</source>
        </item>
        <item>
          <title>Consider battery charging thresholds and optimizations</title>
          <dc:creator><![CDATA[Ashwagandha]]></dc:creator>
          <category>Development</category>
          <description><![CDATA[
            <p>It might be a good idea to to look at including the <code>tlp</code> and <code>tlp-rdw</code> packages</p>
<blockquote>
<p>TLP supplies separate settings profiles for AC and battery power and<br>
can enable or disable Bluetooth, Wi-Fi and WWAN radio devices upon<br>
system startup.</p>
</blockquote>
<p>Setting in the <code>/etc/default/tlp config</code></p>
<pre><code class="lang-auto"># Sets the charge threshold to 80% similar to windows settings as to not overcharge the battery when AC is plugged in
TLP_BATTERY_CHARGE_THRESHOLDS="75 80"
</code></pre>
<pre><code class="lang-auto"># This sets the default screen display brightness when on battery to 75 and 100 when plugged in
TLP_DEFAULT_BRIGHTNESS_ON_AC=100
TLP_DEFAULT_BRIGHTNESS_ON_BAT=75
</code></pre>
<p>Another suggestion would be disabling “GNOME animations” which could<br>
equal Improved Performance, Faster Response Time, and Battery Saving.</p>
<p>Adding these two lines to a custom dconf <code>/etc/dconf/db/local.d/</code></p>
<pre><code class="lang-auto">[org/gnome/desktop/interface]
enable-animations = false
</code></pre>
<ul>
<li>
<h1><a name="p-2250-notes-about-other-de-optimizations-speed-performance-1" class="anchor" href="https://forums.kicksecure.com#p-2250-notes-about-other-de-optimizations-speed-performance-1"></a>Notes about other DE optimizations (speed &amp; performance)</h1>
</li>
</ul>
<p><strong>Disable desktop effects</strong> <em>(Linux Mint or Cinnamon Desktop Environment)</em></p>
<pre><code class="lang-auto">gsettings set org.cinnamon.desktop.effect show-desktop false
</code></pre>
<p><strong>Disable compositing for full-screen windows</strong> <em>xfce</em> (may also apply to other Desktop Environments)</p>
<pre><code class="lang-auto">xfconf-query -c xfwm4 -p /general/use_compositing -s false
</code></pre>
<p>(The global config or a user custom specific file should be located in <code>/etc/xdg/xfconf/xfce-perchannel-xml/</code>)</p>
<blockquote>
<p>Disabling compositing may improve performance for certain applications, especially games or video players, but it may also disable some visual effects and features like transparency and shadows. If you want to re-enable compositing later, you can follow the same steps and check the options again with “true” instead.</p>
</blockquote>
<p><strong>On KDE If you want to disable the compositor entirely</strong> (which will affect all windows, not just full-screen ones), you can do so with the following command:</p>
<pre><code class="lang-auto">kwriteconfig5 --file kwinrc --group 'Compositing' --key 'Enabled' 'false'
qdbus org.kde.KWin /Compositor suspend
</code></pre>
<p>To re-enable it, you can use:</p>
<pre><code class="lang-auto">kwriteconfig5 --file kwinrc --group 'Compositing' --key 'Enabled' 'true'
qdbus org.kde.KWin /Compositor resume
</code></pre>
            <p><small>5 posts - 3 participants</small></p>
            <p><a href="https://forums.kicksecure.com/t/consider-battery-charging-thresholds-and-optimizations/912">Read full topic</a></p>
          ]]></description>
          <link>https://forums.kicksecure.com/t/consider-battery-charging-thresholds-and-optimizations/912</link>
          <pubDate>Wed, 22 Jan 2025 10:49:18 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.kicksecure.com-topic-912</guid>
          <source url="https://forums.kicksecure.com/t/consider-battery-charging-thresholds-and-optimizations/912.rss">Consider battery charging thresholds and optimizations</source>
        </item>
        <item>
          <title>Installing FDE LUKS with Detached LUKS header option</title>
          <dc:creator><![CDATA[JuicyOdds]]></dc:creator>
          <category>Development</category>
          <description><![CDATA[
            <p>You know there are great things that have been discussed/mentioned in the other thread called “BusKill” which shreds the LUKS header. Which leads to the data being useless due to it being no different then random data forensically.</p>
<p>Instead of that it would be better if Kicksecure developed the feature and option when selecting Full Disk Encryption via LUKS at installation. <strong>To have the option to detach the LUKS header</strong> and store it on another device whether that be a USB, SD Card, Smart Card, Yubikey, Nitrokey, etc.</p>
<p>The main development would be the integration into Grub as it would have to ask for device or detect a saved device that has the luks header aswell as ask for the passphrase. The other integration would be into the graphical installer (e.g. Calamares) for selecting such a option.</p>
<p>Currently there is no option to set up a Linux install with FDE and a detached header. However this implementation would greatly servers and personal computers alike.</p>
<p>Here is a good read about this topic.</p>
<p>skrilnetz .net/bullet-proof-data-encryption-with-luks-and-a-detached-header/</p>
<p><strong>In summery here are the Benefits:</strong></p>
<ul>
<li>
<p><strong>Enhanced Security</strong>: – By separating the header from the encrypted data, users can reduce the risk of unauthorized access to their encrypted storage.</p>
</li>
<li>
<p><strong>Flexibility</strong>: – Users can choose to store the header in a more secure location, such as a different device or a secure cloud storage solution.</p>
</li>
<li>
<p><strong>Improved Usability</strong>: – This feature would cater to advanced users who require additional security measures for their sensitive data.</p>
</li>
<li>
<p><strong>Plausible Denial</strong>: – By using a detached header, users can claim that the encrypted storage contains random data, as the absence of the header makes it impossible to decrypt the contents without the correct key. This provides a layer of plausible deniability, as users can assert that they do not possess the means to access the data.</p>
</li>
</ul>
            <p><small>8 posts - 4 participants</small></p>
            <p><a href="https://forums.kicksecure.com/t/installing-fde-luks-with-detached-luks-header-option/907">Read full topic</a></p>
          ]]></description>
          <link>https://forums.kicksecure.com/t/installing-fde-luks-with-detached-luks-header-option/907</link>
          <pubDate>Tue, 21 Jan 2025 12:33:33 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.kicksecure.com-topic-907</guid>
          <source url="https://forums.kicksecure.com/t/installing-fde-luks-with-detached-luks-header-option/907.rss">Installing FDE LUKS with Detached LUKS header option</source>
        </item>
        <item>
          <title>Verified Boot</title>
          <dc:creator><![CDATA[Patrick]]></dc:creator>
          <category>Development</category>
          <description><![CDATA[
            <p>At the time of writing, verified boot with reasonable security and usability using user-custom keys for Open Source Linux desktop distributions comparable to some Android hardware is unavailable due to a lack of hardware/firmware support (at least on the Intel/AMD64 platform).</p>
<p>The gigantic <a href="https://www.kicksecure.com/wiki/Verified_Boot">verified boot</a> wiki page has grown as large as it has because <a class="mention" href="https://forums.kicksecure.com/u/arraybolt3">@arraybolt3</a> and I have been trying to wrap our heads around how verified boot with reasonable security, usability, and user-custom keys for Open Source (Linux) distributions, comparable to some Android hardware, could be implemented.</p>
<p>Sponsor PUP (related: <a href="https://www.kicksecure.com/wiki/Transparency">Transparency</a>) will pay an OEM with firmware development skills to revise that wiki page with the goal of drafting a concept on how this could be implemented and identifying areas that might require further research.</p>
<p>If we are lucky, and if financially feasible, this might result in the development of hardware/firmware that allows for full verified boot to be implemented and actually realized.</p>
            <p><small>6 posts - 1 participant</small></p>
            <p><a href="https://forums.kicksecure.com/t/verified-boot/901">Read full topic</a></p>
          ]]></description>
          <link>https://forums.kicksecure.com/t/verified-boot/901</link>
          <pubDate>Mon, 20 Jan 2025 07:42:40 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.kicksecure.com-topic-901</guid>
          <source url="https://forums.kicksecure.com/t/verified-boot/901.rss">Verified Boot</source>
        </item>
        <item>
          <title>Onion APT repositories connection timeouts solution?</title>
          <dc:creator><![CDATA[Quiksilver]]></dc:creator>
          <category>Development</category>
          <description><![CDATA[
            <p>Tor onion APT repositories can sometimes fail when updating. This can can happen due to the slowness of generated onion circuits or having a custom <code>/etc/tor/torrc</code> can cause them to timeout when updating.</p>
<p>In fact the Tails project since 6.4 removed the onion Debian repositories</p>
<blockquote>
<p>Switch to using HTTPS addresses instead of an onion addresses for the Debian and Tails APT repositories. This makes the Additional Software feature more reliable.</p>
<blockquote>
<p><a href="https://tails.net/news/version_6.4/index.en.html" class="inline-onebox" rel="noopener nofollow ugc">Tails - Tails 6.4</a></p>
</blockquote>
</blockquote>
<p>I created a config <code>/etc/apt/apt.conf.d/99timeout</code></p>
<p>(15 seconds till timeout, 5 seconds till retry, and retries 3 times.)</p>
<pre><code class="lang-auto">Acquire::http::Timeout "15";
Acquire::http::Retry-After "5";
Acquire::Retries "3";
</code></pre>
<p>I’m not sure how the integration tor and APT works but this would only effect http repos which also are what onions are.</p>
<p>This configuration seemed to work for me but I’m not sure if this fix is placebo?</p>
<p>In closing I don’t think Kicksecure should follow the same route of removing Onion repositories or Onion Debian repositories as thats one thing i strongly disagree with choice of the other project.</p>
            <p><small>1 post - 1 participant</small></p>
            <p><a href="https://forums.kicksecure.com/t/onion-apt-repositories-connection-timeouts-solution/900">Read full topic</a></p>
          ]]></description>
          <link>https://forums.kicksecure.com/t/onion-apt-repositories-connection-timeouts-solution/900</link>
          <pubDate>Mon, 20 Jan 2025 05:13:21 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.kicksecure.com-topic-900</guid>
          <source url="https://forums.kicksecure.com/t/onion-apt-repositories-connection-timeouts-solution/900.rss">Onion APT repositories connection timeouts solution?</source>
        </item>
        <item>
          <title>Exclusive Authentication Token</title>
          <dc:creator><![CDATA[MasonicMazer]]></dc:creator>
          <category>Development</category>
          <description><![CDATA[
            <p><strong>Proposal for</strong> <strong>Exclusive Authentication Token</strong>:</p>
<p>system multifactor auth and killswitch in one user-tethered dongle</p>
<p>Secure boot can be implemented in Kicksecure for platform binding, but what about other hardware-engaging options like locking LUKS with a security key?</p>
<ul>
<li>
<p>search: support nitrokey com – Unlocking LUKS with a USB key on Fedora/Qubes</p>
</li>
<li>
<p>search: Fedora forum - which dracut method (Yubikey)</p>
</li>
<li>
<p>What does the Kicksecure team think about measured boot (HEADS BIOS) and Anti-Evil Maid (see AEM - Qubes OS + TPM)?</p>
</li>
</ul>
<p><em>BusKill</em> by Michael Altfield (on github) utilizes an app that triggers a hotplug removal event (in libusb) and a specific drive and port can be designated (usb: 00x , 00x) so that other USB devices do not trigger the shutdown.</p>
<p>Therefore, <strong>a single usb device could both</strong> authenticate LUKS cryptab with FIDO (biometric and/or unique physical token) and trigger a hotplug removal event in libusb on the BusKill application (python, sha256, .btz).</p>
<p>Would Kicksecure approve of this feature or can anyone on the development team find any security flaw with this technique being implemented?</p>
<p>In TAILS OS, all one has to do is attach a lanyard to the TAILS USB device and wrap the cord around your wrist. If the computer is forcefully removed from you, both the shutdown sequence is initiated and the RAM is cleared and persistent storage is again locked in the FDE state. However, if developer mode is and security-misc is fully enabled on Kicksecure, one has to wait for sudo shutdown and if unencumbered on the stable or testing mode, the computer could be stolen while in an unlocked state.</p>
            <p><small>7 posts - 4 participants</small></p>
            <p><a href="https://forums.kicksecure.com/t/exclusive-authentication-token/888">Read full topic</a></p>
          ]]></description>
          <link>https://forums.kicksecure.com/t/exclusive-authentication-token/888</link>
          <pubDate>Sat, 18 Jan 2025 13:03:14 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.kicksecure.com-topic-888</guid>
          <source url="https://forums.kicksecure.com/t/exclusive-authentication-token/888.rss">Exclusive Authentication Token</source>
        </item>
        <item>
          <title>Gnome-keyring dependency and chromium browsers</title>
          <dc:creator><![CDATA[Quiksilver]]></dc:creator>
          <category>Development</category>
          <description><![CDATA[
            <p>So I just did a full upgrade and now I get prompted to unlock the keyring for Brave browser everytime its launched.</p>
<p>In the past when I was distrohopping another distro that had xfce I would get that same prompt with Ungoogled-chromium and also Vivaldi which are both chromium based.<br>
Its weird considering I never even use a browser keyring password manager I dont get why it prompts this.</p>
<p>Anyway the fix always used to be purge <code>gnome-keyring</code> however this doesn’t seem to be the best choice.</p>
<p>When you type <code>sudo apt purge gnome-keyring</code> it will show the other dependencies to remove are <code>kicksecure-desktop-environment-essential-xfce</code> and other Kicksecure specific ones so obviously I chose NOT to go forward.</p>
<p>The only fix in the meantime that is better is to add the chrome flag <code>--password-store=basic</code> which will ingore using GNOME keyring or kwallet (KDE).</p>
<p>So you would edit your launcher <code>Exec=/usr/bin/browser --password-store=basic</code> for the browser application or you could edit your <code>/usr/share/application/browser.desktop</code> file for desktop file but this might get updated with new updates so launcher seems like the safer bet.</p>
<p>Back to the point why is gnome-keyring dependency needed and could something be added to Kicksecure like above to automatically fix this pesky issue or to the wiki regarding chromium unlock keyring prompt with gnome-keyring.</p>
<p><strong>Solution</strong> add the chrome flag <code>--password-store=basic</code></p>
            <p><small>4 posts - 2 participants</small></p>
            <p><a href="https://forums.kicksecure.com/t/gnome-keyring-dependency-and-chromium-browsers/865">Read full topic</a></p>
          ]]></description>
          <link>https://forums.kicksecure.com/t/gnome-keyring-dependency-and-chromium-browsers/865</link>
          <pubDate>Fri, 10 Jan 2025 01:48:18 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.kicksecure.com-topic-865</guid>
          <source url="https://forums.kicksecure.com/t/gnome-keyring-dependency-and-chromium-browsers/865.rss">Gnome-keyring dependency and chromium browsers</source>
        </item>
        <item>
          <title>Additional package to Kicksecure ISO build</title>
          <dc:creator><![CDATA[suse211213]]></dc:creator>
          <category>Development</category>
          <description><![CDATA[
            <p>Looking for methods to add a package to ISO that’s not included by default .</p>
            <p><small>3 posts - 2 participants</small></p>
            <p><a href="https://forums.kicksecure.com/t/additional-package-to-kicksecure-iso-build/854">Read full topic</a></p>
          ]]></description>
          <link>https://forums.kicksecure.com/t/additional-package-to-kicksecure-iso-build/854</link>
          <pubDate>Sun, 05 Jan 2025 16:43:55 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.kicksecure.com-topic-854</guid>
          <source url="https://forums.kicksecure.com/t/additional-package-to-kicksecure-iso-build/854.rss">Additional package to Kicksecure ISO build</source>
        </item>
        <item>
          <title>Reducing the risk of installing malicious apt packages?</title>
          <dc:creator><![CDATA[arraybolt3]]></dc:creator>
          <category>Development</category>
          <description><![CDATA[
            <p>(Was waiting for a very long software build to finish and this idea popped into my head, so I decided to write it up and post it.)</p>
<p>A distro’s package manager is an interesting potential malware vector for a number of reasons. They are implicitly trusted by the distribution as being a safe source of software. The fact that these repositories are maintained by distributions and don’t simply allow anyone to throw software onto them increases their trustworthiness, and thus increases a user’s likelihood to treat them as entirely safe. Even though I do not (any longer) trust a distro’s official repos to be totally safe, I do generally trust <code>sudo apt install</code> to be more safe than most other ways of obtaining software.</p>
<p>However, while a distro’s repositories are indeed <em>more</em> safe than using the Internet at large as your software repository (thanks Windows for proving that), that doesn’t mean that a package manager is entirely safe:</p>
<ul>
<li>Very little code review is generally done when packaging a software application for several major distributions, including Debian. Debian does not require (or even particularly encourage) packagers to do a code review, and the people who review new packages to ensure they are suitable for inclusion into the Debian archives mostly check that the <em>packaging</em> looks good, not the code of the application. As a result it is very possible for a malicious package to be introduced into the archive on accident. Similarly, it’s possible for malicious code to be introduced into a previously legitimate application without anyone noticing. (This has happened at least twice before, once very notably in the xz-utils incident, and once in a <a href="https://www.zdnet.com/article/linux-infection-proves-windows-malware-monopoly-is-over-gentoo-ships-backdoor-updated/" rel="noopener nofollow ugc">lesser-known backdoor attack on the UnrealIRCD server, which affected Gentoo</a>. That second attack <a href="https://www.zdnet.com/article/linux-infection-proves-windows-malware-monopoly-is-over-gentoo-ships-backdoor-updated/" rel="noopener nofollow ugc">went undetected for six or seven months</a>.)</li>
<li>Once a packager gets a package into the archive, they can provide updates for it <em>in Debian Unstable</em> with no or very little supervision. This is especially true if the packager is a Debian Maintainer (thus able to upload specific packages without needing a sponsor) or a Debian Developer (thus able to upload an update to any package without needing a sponsor). A malicious or compromised DM or DD could thus potentially introduce malicious code into the archive without being noticed. Supplying updates for a package in a stable release is harder and would probably not be so easy to compromise in this way thankfully, but you still are putting your trust in the DMs and DDs of Debian, which could be poorly placed. Remember that Jia Tan was fully trusted and that turned out to be a bad idea.</li>
<li>Many software applications in Debian are outdated, meaning they could carry severe security-related bugs that make them unsafe to use even if they contain no intentionally malicoius code. The Chromium browser package is a good example of this - it was so often out-of-date that the Linux Mint developers <a href="https://blog.linuxmint.com/?p=3978" rel="noopener nofollow ugc">decided to build it themselves for LMDE</a>. Chromium, despite its apparently good security design, is also a massive source of security vulnerabilities probably because it is such a popular application and thus everyone’s looking for vulnerabilities in it. The problems with Chromium might not be as bad now as they were back then, but this kind of thing is still worrying.</li>
<li>There are also packages that Debian just refuses to provide security support for because they’re so hard to support. I can’t remember an example right off the top of my head, but <code>check-support-status</code> can be used to find packages one has installed that fall into this category. I seem to remember something WebKit related warning me about this once.</li>
<li>Users may enable third-party repositories to get software that isn’t available from the Debian archives, or that is outdated in Debian. These repositories are probably OK if the user is installing software from an official upstream source, but there’s nothing stopping someone from making a malicious Debian repo that advertises newer versions of outdated software to make itself attractive. There’s also the incident with a <a href="https://debugpointnews.com/free-download-manager-debian/" rel="noopener nofollow ugc">malicious third-party repo for Free Download Manager</a>, which involved a compromise of the authentic Free Download Manager website. (That attack went undetected for <a href="https://www.freedownloadmanager.org/blog/?p=664" rel="noopener nofollow ugc">around two years</a>.)</li>
</ul>
<p>All of these issues could potentially cause serious trouble even for a security-conscious user, and to my awareness no major operating system (Linux or otherwise) makes any attempt to significantly mitigate the risks these kinds of attacks introduce. (Debian’s <code>check-support-status</code> <em>helps</em>, but it only helps with one particular scenario, and it’s not even installed by default on Debian systems as far as I know. Similarly Windows’ and MacOS’s restrictions related to signed code can make it more difficult to run code by people who don’t provide a clear link between their software and their identity, but there’s nothing stopping someone from just publishing signed malicious code, plus identity theft is a thing.) The user is left to figure out what they do or don’t trust by themselves, and while the user should <strong>always</strong> be the final authority on what is or isn’t trusted, it should be recognized that some users are just plain bad at making good decisions about what to trust. As the saying goes, <a href="https://en.wikipedia.org/wiki/Dancing_pigs" rel="noopener nofollow ugc">“Given a choice between dancing pigs and security, users will pick dancing pigs every time.”</a></p>
<p>How could we harden apt in order to make this problem less of a problem? We <strong>absolutely should not block users from installing software</strong> regardless of what that software is, but it might be a good idea to do something so that the user is given some pause for thought before doing something they probably shouldn’t do. One potential idea might be to wrap <code>apt install</code> commands to see what packages a user is trying to install, determine what sources apt will choose for installing these applications, and then check them against a database of “known good software” and another database of “known bad software”. If the user is trying to install something that isn’t explicitly trusted, they’ll get a warning they can click through, and if they’re trying to install something that is explicitly distrusted, they’ll get a dire warning that requires some effort to bypass. (Or maybe we make all warnings like this require some effort to bypass, although we do have to be careful that we don’t get backlash for “locking down” the OS if we go that route, then again I don’t think users expect us to be trying to mess up our users like Microsoft or Apple might do.) As for how these databases are built, we could add everything that is part of Kicksecure by default to the database, plus a bunch of widely-used software that isn’t suspected to be intrinsically dangerous. Specific third party repos for software like Element, Google Chrome, or Visual Studio Code could also be added. (Yes, I know that Google Chrome is debatable when it comes to whether it’s intrinsically dangerous or not, but you get my point.) We’d probably get some user complaints if we did this sort of thing, but we could always expand the database if people find things that we can determine are widely used, and for those who are using niche applications, they can expand the database themselves. This is just one potential application, I don’t know for sure if this is the best way of doing this, but it might work.</p>
            <p><small>5 posts - 4 participants</small></p>
            <p><a href="https://forums.kicksecure.com/t/reducing-the-risk-of-installing-malicious-apt-packages/848">Read full topic</a></p>
          ]]></description>
          <link>https://forums.kicksecure.com/t/reducing-the-risk-of-installing-malicious-apt-packages/848</link>
          <pubDate>Fri, 03 Jan 2025 02:55:57 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.kicksecure.com-topic-848</guid>
          <source url="https://forums.kicksecure.com/t/reducing-the-risk-of-installing-malicious-apt-packages/848.rss">Reducing the risk of installing malicious apt packages?</source>
        </item>
        <item>
          <title>Live Kicksecure Host, Live Whonix VM</title>
          <dc:creator><![CDATA[KSWhonixXMR]]></dc:creator>
          <category>Development</category>
          <description><![CDATA[
            <p><strong>Live</strong> <strong>Kicksecure with Live VM</strong></p>
<p>A live Kicksecure host cannot run a VM.</p>
<p>Is it possible to develop a fully <em>stateless</em> system that would function with a live Kicksecure host running a live Whonix VM (set to Immutable in Virtual Box)?</p>
<p>See image of error message here:<br>
– drive. proton. me /urls/   ATVJSDRBS0#2L5gpa2yNrUJ<br>
– drive. proton. me /urls/   PMZPCBGZA0#j0B4BZFjRiAx</p>
<p>(FYI, KVM seems the more secure virtualization technology to me since I have seen Oracle’s software crash many times on Fedora hosts. But I understand the Company’s expertise can come in handy from time to time.)</p>
<hr>
<p>A few additional security observations:</p>
<p>‘<strong>hardened-kernel</strong>’ is a highly appreciated feature in Kicksecure.<br>
wiki/Hardened-kernel<br>
Other software is far more susceptible to kernel crashes. For example, both Qubes (Fedora Dom0) and Graphene OS have observable soft-spots in their kernel and it would be very unfortunate if one stored a wallet with Amethyst, etc (Android) or in a weak Fedora host. Building Mobian on Pine64 towards a mobile Kicksecure spin would be awesome for secure mobile crypto wallets that could interact with POS IRL<br>
forum  qubes-os org /t/ vm-sigkill-at-will-d-bus-broker-service-and-qubesd-fail-to-boot-attack-disables-qubes-updater/30344<br>
– drive. proton. me /urls/  T0VY01P1E4#jr2QDZ4xppax<br>
– drive. proton. me /urls/  YK1ASHFKWM#ghFIFlLQ5FnQ</p>
<ul>
<li>virtualization not strong - i.e. rpc and qrexec really all connected<br>
article /  10.1007/s41870-019-00294-x</li>
</ul>
<p><strong>Native sandboxing</strong>  like Firejail is also a good place to direct one’s efforts in developing Kicksecure. https:/  /www.  kicksecure. com/wiki/Sandbox-app-launcher<br>
After extensive testing, it would appear that the MAC control and permission hardening paradigm of TAILS is stronger than the compartmentalization and isolation through virtualization strategy of Qubes OS.</p>
<p><strong>Dual Strength Tor Level</strong> options – If one takes a look at Nym (Chaum mixnet - Free Haven whitepapers) VPN, you can see that there is a Wireguard level and a mixnet level for secure messaging and confidential layer blockchain. I would recommend something similar if not handled on an app-by-app basis for levels of tor: <em>one layer with Vanguards</em> and another <em>layer for low-latency</em> tor.</p>
<p><strong>Kloak</strong> - keystroke anonymization is also a very interesting Kicksecure feature under development that is not offered in any other major distribution.</p>
            <p><small>15 posts - 6 participants</small></p>
            <p><a href="https://forums.kicksecure.com/t/live-kicksecure-host-live-whonix-vm/779">Read full topic</a></p>
          ]]></description>
          <link>https://forums.kicksecure.com/t/live-kicksecure-host-live-whonix-vm/779</link>
          <pubDate>Mon, 16 Dec 2024 00:08:27 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.kicksecure.com-topic-779</guid>
          <source url="https://forums.kicksecure.com/t/live-kicksecure-host-live-whonix-vm/779.rss">Live Kicksecure Host, Live Whonix VM</source>
        </item>
        <item>
          <title>Systemd discussion</title>
          <dc:creator><![CDATA[extraextra]]></dc:creator>
          <category>Development</category>
          <description><![CDATA[
            <aside class="quote no-group" data-username="linuxer" data-post="6" data-topic="742" data-full="true">
<div class="title">
<div class="quote-controls"></div>
<img loading="lazy" alt="" width="24" height="24" src="https://forums.kicksecure.com/letter_avatar_proxy/v4/letter/l/b5e925/48.png" class="avatar"><a href="https://forums.kicksecure.com/t/purevpn-does-not-work-after-installing-kicksecure/742/6">PureVPN does not work after installing Kicksecure</a></div>
<blockquote>
<p>Kicksecure does not use systemd-resolved by default - maybe this is reason for the problems?</p>
</blockquote>
</aside>
<p>Not sure if thats the issue but if it is then its unsolvable by default. we try to avoid systemd as much as possible and this looks like app specific change so you need to figure out how to set apps needs on the OS.</p>
            <p><small>9 posts - 4 participants</small></p>
            <p><a href="https://forums.kicksecure.com/t/systemd-discussion/766">Read full topic</a></p>
          ]]></description>
          <link>https://forums.kicksecure.com/t/systemd-discussion/766</link>
          <pubDate>Tue, 03 Dec 2024 11:33:33 +0000</pubDate>
          <discourse:topicPinned>No</discourse:topicPinned>
          <discourse:topicClosed>No</discourse:topicClosed>
          <discourse:topicArchived>No</discourse:topicArchived>
          <guid isPermaLink="false">forums.kicksecure.com-topic-766</guid>
          <source url="https://forums.kicksecure.com/t/systemd-discussion/766.rss">Systemd discussion</source>
        </item>
  </channel>
</rss>
